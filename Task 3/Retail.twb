<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1010.1202                               -->
<workbook original-version='18.1' source-build='2019.4.0 (20194.19.1010.1202)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <CascadingFilters />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='SampleSuperstore' inline='true' name='federated.084zwb61vct9p91bbpk9m11vobq7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SampleSuperstore' name='textscan.1nc0o870a8b04i1c7k3o21epeigw'>
            <connection class='textscan' directory='/Users/snehchitalia/Desktop/Internship and Trainings/Sparks/Task 3' filename='SampleSuperstore.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1nc0o870a8b04i1c7k3o21epeigw' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column aggregation='None' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Category,Sub-Category)' hidden='true' name='[Action (Category,Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,State)' hidden='true' name='[Action (Country,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Segment)' hidden='true' name='[Action (Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (Ship Mode)' hidden='true' name='[Action (Ship Mode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Ship Mode]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Sub-Category)' hidden='true' name='[Action (Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Category, Sub-Category'>
          <field>[Category]</field>
          <field>[Sub-Category]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.566462' measure-ordering='alphabetic' measure-percentage='0.433538' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Everything' type='sheet' worksheet='Categories/Sub-categories w.r.t measure values' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Everything' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Everything' type='sheet' worksheet='Region w.r.t measure values' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Everything' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Everything' type='sheet' worksheet='Ship mode w.r.t measure values' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Everything' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sub-category' type='sheet' worksheet='Categories/Sub-categories w.r.t measure values' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Sub-category' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sub-category' type='sheet' worksheet='Subcategory by measure value' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Sub-category' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Everything' type='sheet' worksheet='Measure Values in each state' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Everything' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Everything' type='sheet' worksheet='Segment w.r.t measure values' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Everything' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Categories/Sub-categories w.r.t measure values'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.084zwb61vct9p91bbpk9m11vobq7' />
          </datasources>
          <datasource-dependencies datasource='federated.084zwb61vct9p91bbpk9m11vobq7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Region)]'>
            <groupfilter function='member' level='[Region]' member='&quot;East&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Segment)]'>
            <groupfilter function='member' level='[Segment]' member='&quot;Corporate&quot;' user:ui-action-filter='[Action7]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Ship Mode)]'>
            <groupfilter function='member' level='[Ship Mode]' member='&quot;First Class&quot;' user:ui-action-filter='[Action3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Sub-Category)]'>
            <groupfilter function='level-members' level='[Sub-Category]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Category:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Segment:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Ship Mode:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Ship Mode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Sub-Category:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Category:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Region:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Sub-Category)]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Region)]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Sub-Category:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Ship Mode:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Segment:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Country,State)]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Ship Mode)]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Segment)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' value='Category Measure Values'>
              <formatted-text>
                <run>Category Measure Values</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.084zwb61vct9p91bbpk9m11vobq7].[Multiple Values]</rows>
        <cols>([federated.084zwb61vct9p91bbpk9m11vobq7].[none:Category:nk] / ([federated.084zwb61vct9p91bbpk9m11vobq7].[none:Sub-Category:nk] / [federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]))</cols>
      </table>
      <simple-id uuid='{73C9AC40-3500-460F-90B3-7E70F2710C67}' />
    </worksheet>
    <worksheet name='Measure Values for each State'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.084zwb61vct9p91bbpk9m11vobq7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.084zwb61vct9p91bbpk9m11vobq7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <manual-sort column='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Discount:qk]&quot;</bucket>
              <bucket>&quot;[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Quantity:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Category,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Segment:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Ship Mode:nk]'>
            <groupfilter function='member' level='[none:Ship Mode:nk]' member='&quot;Same Day&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Sub-Category:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Category,Sub-Category)]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Region:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Region)]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Ship Mode:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Segment:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' value='State Measure Values&#10;'>
              <formatted-text>
                <run>State Measure Values&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.084zwb61vct9p91bbpk9m11vobq7].[Multiple Values]</rows>
        <cols>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:State:nk]</cols>
      </table>
      <simple-id uuid='{A99A7497-B53D-4F11-AB15-43B6CE8E36F2}' />
    </worksheet>
    <worksheet name='Measure Values in each state'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.084zwb61vct9p91bbpk9m11vobq7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.084zwb61vct9p91bbpk9m11vobq7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Sales:qk]&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Category,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Category]' member='&quot;Technology&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Sub-Category]' member='&quot;Accessories&quot;' />
                <groupfilter function='member' level='[Sub-Category]' member='&quot;Copiers&quot;' />
                <groupfilter function='member' level='[Sub-Category]' member='&quot;Machines&quot;' />
                <groupfilter function='member' level='[Sub-Category]' member='&quot;Phones&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Region)]'>
            <groupfilter function='member' level='[Region]' member='&quot;East&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Segment)]'>
            <groupfilter function='member' level='[Segment]' member='&quot;Corporate&quot;' user:ui-action-filter='[Action7]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Ship Mode)]'>
            <groupfilter function='member' level='[Ship Mode]' member='&quot;First Class&quot;' user:ui-action-filter='[Action3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Category:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Segment:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Ship Mode:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Ship Mode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Region)]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Category:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Segment:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Ship Mode:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Region:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Ship Mode)]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Category,Sub-Category)]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Segment)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Sales:qk]' palette='orange_gold_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.084zwb61vct9p91bbpk9m11vobq7].[Multiple Values]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' value='State Measure Values'>
              <formatted-text>
                <run>State Measure Values</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Multiple Values]' />
              <text column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:State:nk]' />
              <text column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Multiple Values]' />
              <lod column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Country:nk]' />
              <geometry column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.084zwb61vct9p91bbpk9m11vobq7].[Latitude (generated)]</rows>
        <cols>[federated.084zwb61vct9p91bbpk9m11vobq7].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F2A0D7DC-90A2-4FC9-8EE5-B0FAE462B462}' />
    </worksheet>
    <worksheet name='Region w.r.t measure values'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.084zwb61vct9p91bbpk9m11vobq7' />
          </datasources>
          <datasource-dependencies datasource='federated.084zwb61vct9p91bbpk9m11vobq7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Category,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Category]' member='&quot;Technology&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Sub-Category]' member='&quot;Accessories&quot;' />
                <groupfilter function='member' level='[Sub-Category]' member='&quot;Copiers&quot;' />
                <groupfilter function='member' level='[Sub-Category]' member='&quot;Machines&quot;' />
                <groupfilter function='member' level='[Sub-Category]' member='&quot;Phones&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Segment)]'>
            <groupfilter function='member' level='[Segment]' member='&quot;Corporate&quot;' user:ui-action-filter='[Action7]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Ship Mode)]'>
            <groupfilter function='member' level='[Ship Mode]' member='&quot;First Class&quot;' user:ui-action-filter='[Action3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Category:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Segment:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Ship Mode:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Ship Mode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Sub-Category:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Discount:qk]' included-values='in-range' />
          <slices>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Category,Sub-Category)]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Region:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Category:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Ship Mode:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Segment:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Sub-Category:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Country,State)]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Discount:qk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Ship Mode)]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Segment)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' value='Region Measure Values&#10;'>
              <formatted-text>
                <run>Region Measure Values&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.084zwb61vct9p91bbpk9m11vobq7].[Multiple Values]</rows>
        <cols>([federated.084zwb61vct9p91bbpk9m11vobq7].[none:Region:nk] / [federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{7C91B1BC-314F-4BCA-BE40-29EDCC941C14}' />
    </worksheet>
    <worksheet name='Segment w.r.t measure values'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.084zwb61vct9p91bbpk9m11vobq7' />
          </datasources>
          <datasource-dependencies datasource='federated.084zwb61vct9p91bbpk9m11vobq7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Category,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Category]' member='&quot;Technology&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Sub-Category]' member='&quot;Accessories&quot;' />
                <groupfilter function='member' level='[Sub-Category]' member='&quot;Copiers&quot;' />
                <groupfilter function='member' level='[Sub-Category]' member='&quot;Machines&quot;' />
                <groupfilter function='member' level='[Sub-Category]' member='&quot;Phones&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Region)]'>
            <groupfilter function='member' level='[Region]' member='&quot;East&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Ship Mode)]'>
            <groupfilter function='member' level='[Ship Mode]' member='&quot;First Class&quot;' user:ui-action-filter='[Action3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Category:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Segment:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Ship Mode:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Ship Mode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Sub-Category:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Category,Sub-Category)]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Region:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Region)]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Segment:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Category:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Ship Mode:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Sub-Category:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Country,State)]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Ship Mode)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' value='Segment Measure Values'>
              <formatted-text>
                <run>Segment Measure Values</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.084zwb61vct9p91bbpk9m11vobq7].[Multiple Values]</rows>
        <cols>([federated.084zwb61vct9p91bbpk9m11vobq7].[none:Segment:nk] / [federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{05ECCECC-C0D1-4392-A8AC-D30A58C92BDB}' />
    </worksheet>
    <worksheet name='Ship mode w.r.t measure values'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.084zwb61vct9p91bbpk9m11vobq7' />
          </datasources>
          <datasource-dependencies datasource='federated.084zwb61vct9p91bbpk9m11vobq7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column aggregation='None' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Category,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Category]' member='&quot;Technology&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[Sub-Category]' member='&quot;Accessories&quot;' />
                <groupfilter function='member' level='[Sub-Category]' member='&quot;Copiers&quot;' />
                <groupfilter function='member' level='[Sub-Category]' member='&quot;Machines&quot;' />
                <groupfilter function='member' level='[Sub-Category]' member='&quot;Phones&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Region)]'>
            <groupfilter function='member' level='[Region]' member='&quot;East&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Segment)]'>
            <groupfilter function='member' level='[Segment]' member='&quot;Corporate&quot;' user:ui-action-filter='[Action7]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Category:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Segment:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Segment:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Ship Mode:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Ship Mode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Sub-Category:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Category,Sub-Category)]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Region:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Region)]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Category:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Segment:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Sub-Category:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Ship Mode:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Country,State)]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Segment)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' value='Ship mode Measure Values'>
              <formatted-text>
                <run>Ship mode Measure Values</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.084zwb61vct9p91bbpk9m11vobq7].[Multiple Values]</rows>
        <cols>([federated.084zwb61vct9p91bbpk9m11vobq7].[none:Ship Mode:nk] / [federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{AD0A8C15-F733-4056-940A-0727B20B4851}' />
    </worksheet>
    <worksheet name='Subcategory by measure value'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.084zwb61vct9p91bbpk9m11vobq7' />
          </datasources>
          <datasource-dependencies datasource='federated.084zwb61vct9p91bbpk9m11vobq7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Sales:qk]&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Category,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Category:nk]' filter-group='8'>
            <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Region:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Discount:qk]' included-values='in-range-or-null'>
            <min>2.2250738585072014e-308</min>
          </filter>
          <filter class='quantitative' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Number of Records:qk]' included-values='in-range-or-null'>
            <min>0</min>
          </filter>
          <filter class='quantitative' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Profit:qk]' included-values='in-range-or-null'>
            <min>2.2250738585072014e-308</min>
          </filter>
          <filter class='quantitative' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Quantity:qk]' included-values='in-range-or-null'>
            <min>0</min>
          </filter>
          <filter class='quantitative' column='[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Sales:qk]' included-values='in-range-or-null'>
            <min>2.2250738585072014e-308</min>
          </filter>
          <slices>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Region:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[Action (Category,Sub-Category)]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Category:nk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Discount:qk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Number of Records:qk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Profit:qk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Quantity:qk]</column>
            <column>[federated.084zwb61vct9p91bbpk9m11vobq7].[sum:Sales:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.084zwb61vct9p91bbpk9m11vobq7].[Multiple Values]' />
              <text column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Sub-Category:nk]' />
              <color column='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{698DC1BF-82E4-4996-AFBE-5C1F8D0CB129}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Everything'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='SampleSuperstore' name='federated.084zwb61vct9p91bbpk9m11vobq7' />
      </datasources>
      <datasource-dependencies datasource='federated.084zwb61vct9p91bbpk9m11vobq7'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
        <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
        <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97922' id='7' param='horz' type='layout-flow' w='98750' x='625' y='1039'>
            <zone h='97922' id='5' type='layout-basic' w='86250' x='625' y='1039'>
              <zone h='48961' id='10' name='Categories/Sub-categories w.r.t measure values' w='43128' x='43747' y='1039'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48961' id='13' name='Segment w.r.t measure values' w='27781' x='625' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48961' id='15' name='Ship mode w.r.t measure values' w='28480' x='28406' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48961' id='17' name='Region w.r.t measure values' w='29989' x='56886' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48961' id='24' name='Measure Values in each state' w='43122' x='625' y='1039'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97922' id='6' is-fixed='true' param='vert' type='layout-flow' w='12500' x='86875' y='1039'>
              <zone h='6753' id='25' mode='dropdown' name='Measure Values in each state' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' show-all='false' type='filter' w='12500' x='86875' y='1039'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6753' id='14' mode='checkdropdown' name='Segment w.r.t measure values' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' type='filter' w='12500' x='86875' y='7792'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6753' id='16' mode='checkdropdown' name='Ship mode w.r.t measure values' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' type='filter' w='12500' x='86875' y='14545'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6753' id='18' mode='dropdown' name='Region w.r.t measure values' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' type='filter' w='12500' x='86875' y='21298'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6753' id='32' mode='checkdropdown' name='Categories/Sub-categories w.r.t measure values' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' type='filter' values='database' w='12500' x='86875' y='28051'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6753' id='19' mode='checkdropdown' name='Region w.r.t measure values' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Region:nk]' type='filter' values='database' w='12500' x='86875' y='34804'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6753' id='20' mode='checkdropdown' name='Ship mode w.r.t measure values' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Ship Mode:nk]' type='filter' values='database' w='12500' x='86875' y='41557'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6753' id='12' mode='dropdown' name='Categories/Sub-categories w.r.t measure values' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Category:nk]' type='filter' values='cascading' w='12500' x='86875' y='48310'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6753' id='22' mode='checkdropdown' name='Segment w.r.t measure values' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Segment:nk]' type='filter' values='database' w='12500' x='86875' y='55063'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='40' h='6234' id='26' is-fixed='true' name='Measure Values in each state' pane-specification-id='0' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[Multiple Values]' type='color' w='12500' x='86875' y='61816'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2050' minheight='2050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='40' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97922' id='39' param='vert' type='layout-flow' w='98750' x='625' y='1039'>
                <zone h='6753' id='25' mode='dropdown' name='Measure Values in each state' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' show-all='false' type='filter' w='12500' x='86875' y='1039'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48961' id='24' is-fixed='true' name='Measure Values in each state' w='43122' x='625' y='1039'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='40' h='6234' id='26' name='Measure Values in each state' pane-specification-id='0' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[Multiple Values]' type='color' w='12500' x='86875' y='61816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6753' id='32' mode='checkdropdown' name='Categories/Sub-categories w.r.t measure values' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' type='filter' values='database' w='12500' x='86875' y='28051'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6753' id='12' mode='dropdown' name='Categories/Sub-categories w.r.t measure values' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Category:nk]' type='filter' values='cascading' w='12500' x='86875' y='48310'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48961' id='10' is-fixed='true' name='Categories/Sub-categories w.r.t measure values' w='43128' x='43747' y='1039'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6753' id='14' mode='checkdropdown' name='Segment w.r.t measure values' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' type='filter' w='12500' x='86875' y='7792'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6753' id='22' mode='checkdropdown' name='Segment w.r.t measure values' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Segment:nk]' type='filter' values='database' w='12500' x='86875' y='55063'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48961' id='13' is-fixed='true' name='Segment w.r.t measure values' w='27781' x='625' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6753' id='16' mode='checkdropdown' name='Ship mode w.r.t measure values' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' type='filter' w='12500' x='86875' y='14545'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6753' id='20' mode='checkdropdown' name='Ship mode w.r.t measure values' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Ship Mode:nk]' type='filter' values='database' w='12500' x='86875' y='41557'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48961' id='15' is-fixed='true' name='Ship mode w.r.t measure values' w='28480' x='28406' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6753' id='18' mode='dropdown' name='Region w.r.t measure values' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' type='filter' w='12500' x='86875' y='21298'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6753' id='19' mode='checkdropdown' name='Region w.r.t measure values' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Region:nk]' type='filter' values='database' w='12500' x='86875' y='34804'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48961' id='17' is-fixed='true' name='Region w.r.t measure values' w='29989' x='56886' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A1BB4015-3DB2-43C9-AFF3-1AC3E125F31D}' />
    </dashboard>
    <dashboard name='Sub-category'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='SampleSuperstore' name='federated.084zwb61vct9p91bbpk9m11vobq7' />
      </datasources>
      <datasource-dependencies datasource='federated.084zwb61vct9p91bbpk9m11vobq7'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97922' id='7' param='horz' type='layout-flow' w='98750' x='625' y='1039'>
            <zone h='97922' id='5' type='layout-basic' w='86250' x='625' y='1039'>
              <zone h='97922' id='3' name='Subcategory by measure value' w='43122' x='625' y='1039'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='97922' id='9' name='Categories/Sub-categories w.r.t measure values' w='43128' x='43747' y='1039'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97922' id='6' is-fixed='true' param='vert' type='layout-flow' w='12500' x='86875' y='1039'>
              <zone h='39740' id='8' name='Subcategory by measure value' pane-specification-id='0' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Sub-Category:nk]' type='color' w='12500' x='86875' y='1039'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6753' id='10' mode='checkdropdown' name='Categories/Sub-categories w.r.t measure values' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' show-all='false' type='filter' w='12500' x='86875' y='40779'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11558' id='11' name='Categories/Sub-categories w.r.t measure values' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Category:nk]' show-all='false' type='filter' values='cascading' w='12500' x='86875' y='47532'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16364' id='12' name='Categories/Sub-categories w.r.t measure values' pane-specification-id='0' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' type='color' w='12500' x='86875' y='59090'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97922' id='23' param='vert' type='layout-flow' w='98750' x='625' y='1039'>
                <zone fixed-size='280' h='97922' id='3' is-fixed='true' name='Subcategory by measure value' w='43122' x='625' y='1039'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='39740' id='8' name='Subcategory by measure value' pane-specification-id='0' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Sub-Category:nk]' type='color' w='12500' x='86875' y='1039'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6753' id='10' mode='checkdropdown' name='Categories/Sub-categories w.r.t measure values' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' show-all='false' type='filter' w='12500' x='86875' y='40779'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11558' id='11' mode='checkdropdown' name='Categories/Sub-categories w.r.t measure values' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Category:nk]' show-all='false' type='filter' values='cascading' w='12500' x='86875' y='47532'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='97922' id='9' is-fixed='true' name='Categories/Sub-categories w.r.t measure values' w='43128' x='43747' y='1039'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16364' id='12' name='Categories/Sub-categories w.r.t measure values' pane-specification-id='0' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' type='color' w='12500' x='86875' y='59090'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{13F49CD6-6016-4AC1-9456-2F53A6DE0547}' />
    </dashboard>
  </dashboards>
  <windows pres-mode='true' source-height='30'>
    <window class='worksheet' name='Measure Values in each state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' show-all='false' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='0' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{81BDF209-BB3D-4E97-8680-127BA7B3F27F}' />
    </window>
    <window class='worksheet' name='Measure Values for each State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' show-all='false' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='3' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3785FDE9-9497-4258-9946-A75487A806BB}' />
    </window>
    <window class='worksheet' name='Categories/Sub-categories w.r.t measure values'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' show-all='false' show-morefewerbutton='false' type='filter' />
            <card param='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Category:nk]' show-all='false' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]</field>
            <field>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Category:nk]</field>
            <field>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Region:nk]</field>
            <field>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Segment:nk]</field>
            <field>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Ship Mode:nk]</field>
            <field>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4344C1E9-5FA7-4BB2-B362-DFD5B8D4A775}' />
    </window>
    <window class='worksheet' name='Segment w.r.t measure values'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Segment:nk]' type='filter' />
            <card param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' show-all='false' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='1' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3F29BB10-2872-4C20-B5E5-92DCF8996382}' />
    </window>
    <window class='worksheet' name='Ship mode w.r.t measure values'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Ship Mode:nk]' type='filter' />
            <card param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' show-all='false' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='1' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]</field>
            <field>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Segment:nk]</field>
            <field>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4736DF28-1150-43D1-AE3B-34A82739FB4C}' />
    </window>
    <window class='worksheet' name='Region w.r.t measure values'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Region:nk]' show-all='false' type='filter' />
            <card param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' show-all='false' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='1' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]</field>
            <field>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Region:nk]</field>
            <field>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Segment:nk]</field>
            <field>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EAEA828D-0214-4F54-816D-1168AC55DF10}' />
    </window>
    <window class='worksheet' name='Subcategory by measure value'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='0' param='[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB2BAFC7-1F8B-44FA-B288-8AF142CFB7F8}' />
    </window>
    <window class='dashboard' name='Everything'>
      <viewpoints>
        <viewpoint name='Categories/Sub-categories w.r.t measure values'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Category:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;Technology&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight field='[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Measure Values in each state'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Region w.r.t measure values'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Region:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;East&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Segment w.r.t measure values'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Segment:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;Corporate&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Ship mode w.r.t measure values'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Ship Mode:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;First Class&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='13' />
      <simple-id uuid='{73826A33-95F1-4352-81B9-E198E58F249E}' />
    </window>
    <window class='dashboard' maximized='true' name='Sub-category'>
      <viewpoints>
        <viewpoint name='Categories/Sub-categories w.r.t measure values'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.084zwb61vct9p91bbpk9m11vobq7].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Subcategory by measure value'>
          <highlight>
            <color-one-way>
              <field>[federated.084zwb61vct9p91bbpk9m11vobq7].[none:Sub-Category:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{A7170B50-23ED-4451-A35B-33797E747015}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Categories/Sub-categories w.r.t measure values' width='192'>
      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
      Xzb8fyOOpR5flxZOAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Everything' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Measure Values for each State' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Measure Values in each state' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nNS9V5Bk6ZXf9/uuy5u+TJa3bap99/T0eIMZYAZYGBLEcpekFKtVhEhFrPSi
      UIQe+aQ3PemFelGEGGRQEVxyd8kld2MXwGKBwWB8T/d0T3vf5b3JqvTm3vvpIetm3cy66aqr
      B9A/0KjJa777uXO+c853zvnE0tKSpA5S7rvUMYQQ+65JKWuu+z3TSV0OWk/3u1LKtuvkfqud
      OrdC/Td/lyCEoFwuo2laTf8epL6KohAIBNA07Rtvr5SSYrFIqVSque4dewDNveg4zqFXoH5i
      eSeR+8/7fP19F43qdhiEWl9P93ej7x/GQNq2jaqqv5NE4Df5XXRaXykl5XIZwzAwTRNFUQ6r
      mk3hOA6lUolsNruvzu48dK9rjQqpp5RW8E5wF97f7gRXFGXfBKuHW0EvUTSrYzv19Nav1bPN
      iLcR3HbZtt30ud81eJmOZVkNJ+lBV0Dbtkmn01iWRSgUAqj5RqcSQStIKbFtm0wm4ztm9dd8
      CcCPOzeD9/n6ZdOPKPw6uf45L9dttAI0q+dhctdmIhOAqqqEw2GEEKRSqZb95a4AvyuQUuI4
      TrU/G9W/E5Gx/r1cLkexWNw3ZoqioCgKmqahqmr170HGT0pJqVQik8lgWVZb71QJoBFXbrUS
      eN9rl3C8E7r+mUZikR/quZLfcteqnEbE2wruhIE9jpbL5doqwx30wxDhDgOu3K/relvPH5TR
      tFodhRBomkY8HkfTGgon++riErBLZM0YpvuOC63+ZqMXW4kkfpyx/oPe99sRbTqZIM2I11vH
      dr/XDqdzny+Xy1iWVW2fe72RONGOSHWYaPY9IQSlUolAILCv/d80pJRYloVt2y0JwBV1bNvG
      siwKhUKVwLyMsRGDrVGCXbiU04qj+v32U2C9srzfxxs1rNWq0AjNlvBm1h2/b3p1Fr8yvN/p
      1IDwrOKZd3xafbvVClcqlTAMw7de7RDB87BotUt8rm7RbL7U6371dfUls2aNalfmE0KgKEpV
      VHhWjtKImv0sSm4dGtXdz8LTiMM36ouDroqHgXaVee/zjSZ/I7Hnm16lvGhXP2rG7Orb7L3m
      KwIdBuqXnk44fzvletGONcmLZs+2skg1e65+tXN/O45TQ0DedzVNq5obnzca9bllWS3t8/Xj
      dpAVolO4jLOd5zRN22fnb/RsI2ZVHQGvUvcsDWvFMZ+13Eb//Aiu/j2/MpvBW26ridJIlGr0
      vHflaUfxd587jP2aVjqK95v173RqAeoUnVjHTNMkn8/vM6p0whyrPeAVD9wCOkG9WFHPOd3O
      Pigh1Fuamk1ybxsataWTCfus8NMvLMvqmFEcRl3db3e6+jyPye4Hy7KwLKstQlcUpbq30MrA
      4t2I884hrZHC+6zwG3Tvd1rJz160mhT1xOF9r5FY1i7c91r1T6cycyPFsx6KoqCqarUOtm23
      vQr4cXDX4tMJvqnJD3u7x+2YZF0xSFGUpiZW0zSBPSlH13V0Xa9YmzqpWDumwfp3vM9KWfHP
      cAfAb4Dq0Uzubgf1z3ondP2q4VePTvWMduAOspcLN3rXNE2CwWD1dzabpVAotPWdehxk8v82
      0O5ueqMxc8WgcDhcLS+fz1fHMhAI7K0AbkHtcuJGClEzuBNO13UKhQKhUMiXi7VLBAe1rvhN
      diFElcM2qkf9plUnZla/d9y+8NYBIBAIVP1YXOi6Xt0ZlVISDoerYkIreL/ZzOLzu4ZOxraZ
      64YrihcKhRoGns1mq89UCcC94P3rvddKQW5ERPW6gWEYZLPZquzmrbDfN/zMWYe9JHsV6UaK
      ZqOVr5021z9bL4dLKQmFQpimiZSyurmjqiqqqu6TXU3TJJvNtmRa7v1vyuJ0WOhkl7yRjuc4
      TnWi+42X+7dhr9Q/+Cxc2PucYRgoilJdkurFoXYG9XnZ193yn0XE8l5vtap4USgU0DQNTdPQ
      dR3HcRr6xBiGQT6fb8u1oFQq/f9q8sNe33nb12iiu6upX1/U64fe6y72uUI0UhSbXWtHQfS+
      Y9s2hmFUvfYikYivwtoMh00EB7UI+RFuO4YFt/4u93c5vXfgbdumXC4D1KwErvNYKwJwlcnn
      Zenyrpxumw4CvxW+VCpVRRdVVYlEIr4MoVNmtY8R+S3t7U5oP4Wx2Tv14ouqqlVbbrPn/HCY
      JsxOyqpXnN1/roOb1wbtZwr2c4Tz6iBCCAzDqBJC/Xa/W3Yre7kr9rjffZ6WnMMo2x0Dx3Fw
      HKfG+mVZFvl8vuEYdRJwU19GU3dovyW83Qnq91Hve+41VVWrCp1XLPAqMX7lHTb3bwSvbuD+
      9v5tVaaf6Oi2zS07l8sBFTEoGAzWTG7XolFfp2ZijZ/49DwIwG9++K2E7vV2mUw2myUejxMK
      haoWs0arndeg0CmEEDTdCvTjcAftyGYTWlGUfRtD3o2sbwp+3NJ7rRMu02iwvYThFXVcxbd+
      ZxPYx/3cQW+2CjxPju9FfVsbtb2VdOCFN6BF13XC4TCRSKThXHCNBY3q1+hbUkqUdsWYRpO3
      /l2/f60qpOs65XKZUqlUY6Nv1yfkWQe72ar2rK4H3gnhbbu7EeZXl/pvFgoF8vl8dYfUrWuj
      Mg5SP++/dp5rBbcd7T5bL1pallVj6Wo2F7w7wp3WfV+pzSatXwF+E7peoW70jrfB4XC4xgRY
      X6YfDjL5/Vai+nLqf3eqazRbNfwG2wvTNH3blMvlqkqhSyDNCKCdOvtN/mchAO/1g7iI16/A
      xWLR19250fuN0KzevmTlijvtFNhMtPE+6yo3jZZMKSWGYSCEqA6027BmE+mgaGc1e1axr35A
      m62MreomZWUX3btSNlv6DwuHYWxoVUaze+l0mmKx6MtEbduuSgwHXakbrgBeEcRPmfE26iDy
      cf2q4lWKQ6EQhUKhRg+on4wHHZiDKPHPAm/9vRtbQojqRPaiUChUTZ/1KJfLFAoFUqlU1XLW
      iQLoZUReptWoPxpxzmbPtltGO+9Cpc07Ozu+7h+uX1S5XK6xJDaC39g3ZPPuQ628Kpu93+wd
      v5XA/etW0jUB1lf+sIjgm0IjkcivDq6bg6qq6Lq+75lCoYDjONXY12flzvV1/CaNDu1CSkk6
      na5hGK4lTEpZEw7ZDH5zSHE/0M4LjSZ1s4l4kInmOA66rhOJRGqsQ89igTqMpfyw4CXgZtB1
      nVgs5ksI7lZ/o1QmnTKrTuD3/GEYIprBba+XUZZKper86FTncaG5N/wq4fe7lRLs99Fm9+rF
      K+/ksG2bYDBIPp+vurS221i3DL/6ftMrQD3qmYqfKOI4TtU9opHIYdt2tV/cvQTv/UZ6U70B
      oNO6N7t3WEzGr5xSqUSxWETXdSzLYnt7uypaHrRMzXuzUee00+h6InoWjltPBKqqVrf16+vo
      N9Ct8LuwEjSzFHlRLpcxTbOhNcQlAjf+2lt+s2+3W0c/BbNRn7e7srWqT6O54+6MB4PB6t4J
      PJupumY7sZ4I6hvqJQjvM/U4DHHD+w1VVatLoJuAyv3Gs4hFv81VANi341sPIUSNBcRtt1fk
      cRXrw7KINZrY9ePd6HveVeYgc6DVe+4m2WGNneZ6Y5bL5Yac3Pu7/q9Lhc3EJ79VwY/zNRO5
      FEWpev15fWeehRAOOx9qJ2gk1vjddxW++v0R15fKry/b7RO/Mfer6/NkFp0QSivGC52JdYqU
      EtM0iUQi1eRIXnPZQRRIP2272fVW5bhwsym028hW3/KbNN8kWulHLjRNIxqN7tMHnlXMeRZd
      4LBxUEOFn47XiXVMKRaLVRNTI59qF/X243Yq523UQaxF9RNY13XS6XRHYXO/7cF14WUuUsoa
      e3+9TuCts23bCFHZLfeKP245uVxuX3+0M0b1lr3D7Kdvgpk0M8i0SwgKVGzPuVyuamc9DBm+
      nXLqiaOtCisK0Wi0I/PX7xrcyebVAepXx3oCkFJWk8d64e4M+33jt4nn9f36vmkkwrX7/X1K
      sN8HXf91r5Lc7sRuVhk/ObVd2dVVjF0rRatNt1Z4VqW6HdSX3Sg3kFsfF7ZtUyqVEELs85qt
      N396339ebdF1HU3TWiaifV7MqRnn9+qo7bRfMU2z4Xa624mhUKhGP2iFVrJpIwpu9a4XboB9
      o3J+F+G3Kvop/n7EkM/nq5O9VR8+b4RCIUKhUDXrQiM8DwJs1HfNjCvNoLgKluuI5oV3OTYM
      o7r17Ioq7eoDfrpDs/9upny796GzLGLNFOLDdCloBL/2eM2XzSbxQSb48+L+btxyvQj324DL
      oNvpw0ZQXPNiOByuNsz7z92RBAgGg9XAhG9ywjQyebVbh0by9TfNOf2sYn5mvWdtr/v88zAA
      eMXhVt8/CNF6HR/97jf77X63keexHxSoNMowDGKxWJUreQsvlUqUSqWqLT4UCrWdWLWd652a
      7Fx485l2gmbLZb1Sflirgx8Btut41mgiN6uXNxHUYRJBuVyuumUXi0XfZxpNvGepS6Oxamfl
      bNZPilu4m2kgGo1W/Uu8KBQK1V1J0zSJxWJEo9G2vUTdbzS61wx+DZFSVhNJPY/l3k/GPiwL
      mbdc91t+oZjNLEPNkEmnufHRv+f+7a8OnQiklGSzWTKZTFsuyC7aqUc7q/5B69zo3Zq0KO5K
      4G6ve+NTpZRVIjAMg0gkUjXJuad6+E1S93e73M77vJ9YUD9J3IxnfoHj9c/7dUR9BFo7ItJh
      TSjX9dn7vfo6t4I7Pl5rTC6fY6SrQHLjHqb5NqVSqWGMwUHxLLvozSxEnVzvpJ8aWcVqzKCu
      YuNyIzdjQ7FYrDl+xs3vmU6nuXPnDoXUOmLlOooAJHimrVty2xV1sZg3GB6t5MS0bMlWyqG/
      e7/S5bZJSs9X2v6cQIjD37TJFyX5oqQn1lxJ3O2uA3+jkLPoie73J3Ich9NDgsxm3veo0OeN
      +v5spvscFG4Z7ZTVjPk2TIviZt11s5TVy8KZTAbTNIlGIoSDJrmlT3mpJ3mAqe6Pn6WDvHl6
      CCEEmZzNjUd53jrT3OxW34bfFlY2S6xsOlw8GWz98AFh2ZIvrqZ4e6pRMLhgJ5fl0YM79PYN
      EolEq/mGvJ61B0UgEKimd3RN5K4U4O5beAP4DwP1ROT9W8/h211Nm54T7K4GruXHexgcQDKZ
      5MHdm2TTKXq7L1CwPiKo/W7b4r8JfBOkJwTYPl3tZVLHBmB1++/ZfKjzJBMiOHCJws48hrMB
      gQFGjr9Cb2+iw++KatiqlNKXkFyPTb9YXm85newpdbK35Pd+I7RMGuk2+OH9u+zs7HDk2BSa
      phIOR9ANk55EH/Hefu5f+TXvntx7r5Av4ugGIQ0KRZuAoVFfFykljgRV8ankM86iRjLfN4lU
      pkAkHKBUsAiYek373bZL2yKXh1isshmZSxfIlGy6uoIYamXplrbFZs4hEfVkgZCgiuYTSAjB
      YLfKYLfDaZlmY+fXdI0qGJogX9zhoy+mGT79fUzTZGh4pGV7FEUhFotV8zi5+qIfAoHAPlfu
      +rq5/dAKfjpZq7Gtf6cRkaj/8l/+y/+9nfwyM7cvE5//KY8Xt/j0i+vkCkX+7M//im+//Sr3
      7i/w8OFd4kaZqChwdyVLKZnkq/USQUMjvVNACocHCymEoWPli9xbTuMUi3z4ZIfBWIB7M1uo
      ZoBsNsfDpRRrMsbpk9GKoluWrG5ZjA92lgfnt0UA2bxNJu9w4/Id7Fg3j6/N05MwuXZ/nb6e
      EKmdDPfvrXHr4RqGCh/+ZhktYpDoCnDlyhy5UpHLD3YY79K483iTeEjyq8c5hkzI5fLcfLJD
      WHP4m18/5uTROI8fryENg4jZmJ8JIQibSpXZ6JpguNvm7t27qLmHLG7Y9A0Mk8/nuPHVZ8S7
      E/u4u+t6PT09zYMHDygUCui67pvKxTVQNAvS6XR8vMTiGklaGVfqDSn132wrbXCFWzkcCWeZ
      kFcZZ4fPP7/CRF5w9S/usqodx7Ic/u7rJFuJPEMjMSSC7u4wCws7ONkyK5Tomhrg0dMU21aR
      EyGbFTNOf3eQldUd9FCIL++s4ygFXhzq5sq6N1/ob9+5q1NIJJOTIyw/WkSRcPn6KudPRvj1
      p0s8Xlzkn7x3BmlohAMq8e4wS6vbnJqIYcRCXLowSP76AqWyTS6T4crtEsm1NDe1HmQqy2g8
      yOM1hWjQJKILSo7D5SsL/OR7x6qihTsxmllrQgGF717UEUiWtq7w8c8f0Bcucmm4xN0vbyMR
      OCKA1vsimhFmZGSEB/fvsrkyy8WX3+TUqVMsLS2xtrbGkSNHqgTjFZPq43i9f9vVD+pXiWfZ
      iK3vj7Zsk0IIjp17lZl8DE2Bo6Mhthdm+ccvCVZm53k//IDV7QJaKMDUWJT7TzbYKTj0Rk3C
      QQUECEUnEQsSCSiEVMn0+g4BXWN7I0cZwXwySw6FUECnJ2KgqXudEwxUOFc235npTUrJLz+8
      x1rWYm1hlV/dWPd9bmMlg83BfdL399fu9xG8MBXj5nQKoUnuzaUxTJUXL4yR6A6wtZohV5bE
      u8PEzMrqVtzO8uX1WbZTDl9fX6CAgqE4qFKlnMpg7eRZ3EoRDhvY2SKP7i9xf7WMFthvZWnr
      nK3dSTjSq/APX8jw2vEy8ZDgjROS16ccjvRkKaUXOXr0CMV8lq3lp3zrvR9x4eJLqKrK2NgY
      4+PjTE9Ps7CwUDO5A4EA8Xicrq4uurq6qqnw6/u50Z7Hs+5htCVeZTIZ2cqpCSqKzZcf/DUn
      1/8SXYFMsUwkoLGRcfjb+RiZnM3RHsm7Q1kKlkPUVBGqgrR3ZTBA01Vsy+H2k3WerGT4zltH
      0QplgkGdnVyJkGmgCYmuKvx0IciPfjRc/b5lSz6/meVbL7ZvCQLJtS9mKETihKwdynaQTDLD
      jiwx2hNmfiuHqZsUt3YYOjNCv2bx1aNtXjndxS9u7jDQY/Lq0ShX7ixx+tJpphLt5eBZ3Syx
      tOlw7qiBpilkc2UMXbCVLpHoCuI4El1TSG0XMCMGAoFAousqhVyJvOUQCQewSmVyJZto0EAK
      AY6NtB0yRZvueJD5hSzJpMVEryAYMgibewduPAscCY/XdFLqFJMnXmV0/AiapuE4TlX239fT
      UpJMJlleXmZ0dJRYLFZTF8dxqptn3vp5ldx6eb0RAburmxsd2AjtMLO2T05QFIVAzyiFZQXd
      cIgEKpPhdjLIq/1Fbm0G2CkLNF2nx/R8VKulXl1XeeFEP+en+tFUBfQKV+iL1e4+K3WKsaYK
      LD+zRwsYZohMepN8LErQctD7Inx7xODnP1vm5d+bpLCcgZjJidMJrn7ylIGoST5X4PjpCbqd
      JAsLKSYHw2xsldomAJdh6XplcCLhyoQZ7N19f3fM4t37zaRmyMDtCT1oEKx5RNl9pvJrfCzM
      ejJLomfv3K/D2NO4v97L5Mv/HX39/TXc190odU2dTx8/ZDu5ybGpU/Qm+ujp6SEejzM/P8/6
      +jrj4+M1xBIIBGqy/tXXt9O6t3q+nU3NjrIgTR45ypodr60Egr+bDfJoU3I+UcYql9jKlLAd
      yXa2SLpgubUlly+znStXTvWzHEp2ZZnOFlufdwUwNmBw5V6estV+R/UNhpkaj9M/3M3gaJwu
      w+HDOzu8+94YvWGD/sEwg8MBPv16DUwNW1fp7e/haK/OYCJKNKaTzAnG2pz8nUNSyJfY3KlM
      jNROnlSuEp23upGl3IToFSGwDzGs2XEkd9Z6OfHGPyfR19fQ9yabzXD5V39B/ua/YWtlpuY5
      VVWZmJhgeHiYJ0+esLS0VN0P0DTN183GLdvPV6qZ4nwYxN72CiCEoKurm6vKEBNOEm2XdHoC
      DqKcxZ55wMhrUywspFlcThJIxHi6WiaXsvgXPxhHlkp8fGONkbE4sUCYn376kMSJY/SUtrm1
      UuC/fXOi7oP763B8LEA6a3P1Xp43zjfOBuwtZGAwAkR2fwcYHAxz7rTniV3T4ncG/cxrOkOJ
      GKfa6aADwrEsfv3lLIrqMDTYTz6dZiuVx7R1SgEIRuO8c6G38fvO4ey7lCzJk+0Bpl7/74lE
      o0gp2drapKen8m1Xp9je3ub+b/4d4/o8a4Pv8d03f7hPDBGiEkNy6tQp1tfXefDgAcPDw9UE
      yI32ANoxbXqfsW3bN5allenTi45WACEEhdhxfrbYg7XLeU72lPmTlxx+PBXEkZCIGjzZKjEQ
      NSmm8whdoEhIpzLc2HR4OJfhxv11xobiZEo2pyf66I+1f4ZVNKwynNC5P1vkMDwY/HyXDts1
      ohmEEKiKU5Ht85Jex0aGozhRle+/OY5Z8Pe4dOEc2JliD9mC5O72FMde/WPyuQyffvg3fPbp
      J6ytrSFl5YSWdDrNrWuf8/CX/xfno3Ms5LtYT9nc/OpzMul0w7b19/czNTXF1tYWT58+bbgD
      3cj50Hu//r1Wxz+5ROunc7jo6PQ0IQQnT55kZeUjXBHd1CCbKzK9kUGsZ9GKZV4+Gufxeob4
      YBR9o8BSqoChm5yJF9GyFmIoQj65w3oxz9J6mfn1DMm8RXewveqMDxpcf5jn9pMCowM6XRF1
      3yabHxafLnN5PsPLZ0cZTwR5dHueR8kSF08Pce/yHEVd5dLFfr6+t0pkqI9vnezppHsOBKGo
      nJ7oZW55i6Cd5aPpDG+8GGdrpcBvvlpEBCJN38/k9/vddELA6ZzN5/MjTJw4ya1P/4JuZY6Y
      I7i7cpJXXn2N5NYmjy//JdbmPca7JN27G8d2fptTgQ8JbUpu/d1vOPd7/wuxeEU8dh0n11ZX
      Kqe7WGWWn1wnL+IMDAzsS+LlRf3Eb+ZtrGkahUKherqmt4z6Mr3wxjR0fHygbkaYz5pc7Nq7
      Zugqb702jm7oOEGFsjQ5Gw2wmSqgHe1iK5khPtTN2xdULKHSFzNwxrt4RQrKxTLfvzhGUKvz
      5mxSByHgwnGT2eUSV+8VeP+VEKKNrePZp1v0D3TTvSv2PFzMMDjaTdQUbGUKkBXMD6c4dWaM
      J/fWsE/2cJCYp06tdtGoybHwKImozvBoN6qicnw8xuJalqGBaNN3g6aC48gao0EnRPD5/SIv
      HF0imF8mMljRK54s25zomuev/uLfMMQ8Fwby6MO1710ccd3QBWf1DW589J/onXiR7r5BVhbn
      yDz5gH59A1VIghockbDS+4+4d+8eQpZRVJ3RsT2xt9Wq4AcpKyn1XY/gg6zcHROAVS5jF1Js
      FVTiARtdAV3XGOh2i9qTyQa7K3J6ItpTaYyxZ9JQVBUTMLUA0U4sm27FVcFgr8Za0kJpc8Zd
      fPsEspjlN1fW+MGbg7z37nFKqS0+vr1G78gAcXboG+tjdWadxZ3CN+LTgxB0de9x+QGPsj05
      Evd7owanjwa5M5vn/JFa5bKeCBoRhapAd0RgeKx1x4ZUIMfR3iyffp1lPSQZiCk1Liveyakp
      cEq7SWnuFgt3DFRKXOqv/Y7twObcX5PKOwzHJffyxxgbn/Tpjs7t/kIIyuVywwMK/eDe75gA
      +gcGKMWP8lnZIppdwbTzvNhbwmzhBNeOb4630iNGmc0di9544yom03bT+/XYWNzgxnyGU8f6
      +eDyIhNxeLpV4MKZEZ5eX2Jb0TlqlXicyvH6y2M1CpKfi+/vAhJdKjfu2Jw/csACmgxbQBe8
      dj7CzEqZR3Nl7KLF8T6F0e7KzoW3C0KGIAR0BWtTtEgJ+TIYquREn0QCilCYy++wMD/HwMAg
      vYlE1cmyUWxJM3hFGlfud61OfuPmvdYxAYRCIc6fCHN2cA3b7qJsx7l+ZYPXurP4+bTVQ0pY
      yCiUbMGWNCij1AyC+5/JskI423yCq4rAatMOKIRg/NgQ48fAsW3GBqKYhsLU7r2x7x6vPvv+
      O605bzPFCmBpvYThqXojeqlcF5X/SWpkP4H3dyV6oCrqCagEX4iGptJWRHpvvkQsrKI1MYWE
      TcHZSQMwkBIeLpb4Yq6MkA5xQ3JqSK2Ou5QSywZVFWxkFTIlQdqJYYy/Sy61SSx1i5VsgEhA
      IiizeP2veSo1fu+f/a9EotG9MiyLUqlUTX3jnhLZbGfbu3K4VinvRlkjq9OBjhAv75rtVVWg
      qoKiHqBkZzG1yi5izhJYjiBmONgSljIKARWmcwZWMMjYaIhoUGUkrKBrYjeIRtYF08Dl+wWC
      AYWBHv/443xREgwo2I5EaeEvVKNYqSqmWnuv3XfbRSys0d/zvPYO9pAvOsRDnR5qIbg9UyBs
      qpwea38KCAEnRw2cYR3LgdszJa7PFXhxXEMRcHMR5jIRbEcwefYNjp2+xEjAYHVllRdefosv
      P+8mU14kMjzJy+cvYFsWt2/fRtmd6G7suWu5cWPUXa7uPTBlf932i3xCCHK5HIFAYN9q4N7v
      mAAURUGoZs2kGR02uTodIizLbKshuvtDSAmpZB6hq4yMmRRtyctDBoa+f7AqFds/Ad86G+SD
      61kGevwtIdsZm74ulV99maU3rnLpVLBjBdRbh8MUayIhhb7uA/GXtuE4ks+/LvCtc+3siXhd
      hGEz7XBi9GCnTCqKwFDg0vEA9+YFa6ki8ZCCNfA2Zy8eZ2dnm9ffegdFUVhbXWVpcZ5YPIa5
      /Pe8ZBZ5OLvMWm+ciWOneOPNN5mZmSEQCDA0NFTdLXaTNbtJGqSUhEIhUqmUb7v8dAdVVQmH
      w9VzFrzPu6GoHY9QZZmrpcKpMZOxgX7SOYdzLlcHHBnYp6B2wk0LJYkZaMzdpkYNFtbKvPNi
      hC9uZ7EdiaYebujdwd6X3Lw1y9ZGiG+/MbYv3sGxLIpSYW1uh+7BKLGwBkge3FtgesvirZfG
      ie4uUfnUDtMFkzP9e+4OdtnGAgK6SqJH4+FiialhoyPiH4wVuTUNipPl/NEuNtN5ijmV8dH2
      iAnAsR0WV1KIqMGm3cWZb79LMpnk3IWL1cnY19/PO99+j7t3bpIrFDmVcOiPLDF779/z2b0J
      Jl74HseOHSOVSvHgwQPGx8eJRqPVKEQXrnOdG2fgvV7t9QaxAoFAgHK5jBCVs2oueYMAACAA
      SURBVJldl44DEYBlWagyX+PEBBWFKRCvNRq2a51phCdLJY6NBhpy5mhY5fSRyjdH+3WWN2zG
      BvaadNi+Je28K4RAlnKkiyqvvjhEeivJRzfWOX1kgHBcxywXWFjd5vqqw7gDmSdrDB/p56Wp
      LkoFne+82MsvP5zm/IkIT9ZKnBpRWE45qNks6XSGzc0iIzGV+xslvvP6BBvLy8wmg/THu+mK
      tGe0FQIWF3boH+riq1ur9EUVkjnQFYcrN+eQgSBjMcHd2SxHxmPcub/GhXOjLE8vs10SvHSq
      l+sPNzl/ZpjeLsFPrywS6e/jfuHnfPudd6rjlUrtYBgBbt28QeDpn3J+CNyVfiJeZIKHPPnq
      MY9L/5ypU+eIx+M8ePCAU6dOVUUfb/imy9HL5XLTfYT97RXVMuod+TomgEIhj8G27z3bsrEl
      6Fp7G1OtsLptcfpYxby3tZWluzuMELC0vM3wUGUjYv3xBtpIN8fHAnxxO0d/t0rA8DeFSQlP
      l0ps7vhklm41933b49/ITE7jyKDJX/3dY04MBnn/3eN8/Ks7DE4NE8tsYfT0cKk/RGl6g5PH
      E8yvpKtV0IIm0ajBRrpIPlVkM6zzwQf3+ZM/eoHkTo7Xpkw+X9B46WI/ZIsIRWd9bQMpu3zr
      0gjRaID7S0nOH+3m4WySs+eHuPr5NvGAhRMvsZByeOeVce7cWeTdNyb5+NYyesrmzLEE2zt5
      tvMOuUKZje0UKCYvXTjPvZl7jI1XbPtSSm7fukVqa5mns0v88UmB6rOYx01Y3lir9KbYO1zb
      JaJcLleTtE1RFILBINlsdv9oeBzf6q/VXwfY3NzonADyuSyRgAV1W0TFXI6ffXgPJxDi2IlR
      Jrt0rLKkVCpihsNEDMnCepb+vhi57TQlPUB3QLCezNGTiFeXfBfJtEN/z962+fLyNopwuHZ/
      DUdq5FJ5VjMW3eUcjxY2GRnoZXMzy5/9NMdPfjBFV92usuNIimVYS9q8cqZxsLrYtcggPQEc
      NfepmnSk5/+8fft4Js2XT7fp6QnRFxP8+pd36BvsY+3xKk9SOV7/zhDXri7S3xvBDKjEdr1F
      i/kUP/9lkqMTfczMboIqCEdMfvzdYyzObVDKZ/lozeaVF8e5fm2ZoxNh0rkyeiBAp7CNGKn1
      FV548xx//rcPeS+k0d1lYAYcNpIlenoFH1yeY7BH5eMrswyO9iAVHTOoIyzojQiSaZtkPsHA
      5DA7C19w/tLvV8erWCxiLV8hlp8jvyl9Jz9AQHNq9iDcDa2qkqpp5PN5QqFQTZBPM3+iZgE3
      rkJ998tPKXz8l+3HA7h49PAeLP57BntqzxDeWt9gIRPkZL/KvYfz/NXXKf7ppQHWyjaFtAOq
      xVBUYSdgkl/IU7Aturodgl09yKLk1QuDe4PjSD69k+dbL+4pv3fuLFLcKXLk5Unm7y9QysBO
      MYVm64y/PM7m421yskR/RONu0uAP3kzgSChbklJZ8miuRDJdybP/3iuN29uOt6Ffp9b00XwJ
      gcPxMRMhwLYrO7W1vu4SoTTev5aORIpaMbJi564ooZXd30pffXkrx5lBle5o+/xsbdtids3i
      1KhB1GNFqkT/SRQhqt+ybWefe7qUEtsRfLJ4ksHAPAUnysvf+5OqW8KNKx/Ts/pXRA2bbEnS
      HWosElzPn+etf/AvEEIwOztLIpEgHA5XTaDpdJpAIFANvcxms9V0nX5j1EgXcH9f/ejX9H35
      5/TIfOcrQLGQIabv97UIBAxW7i1QzgYpSI1XXjpCIlbk7v0dRkZ7KaYzOOUClqoh0dFLZVRV
      Z2K0l7X52kit5U2boTr3Y9M0iAibLz57TCgUoJgpIHSNSCxESNcoRw1K2ykezZex9GF+/nkG
      QxfEwioCCBiC18+F+OJODikb2+UbdV4z+HMjN/wPVHX/geP1E2pfmT7EUSGe2vd9Ewq0gf4u
      DV2Fe/NFeqIaR4e0anSYSw5CsGuJaZCnU8Cp2AMipmQ5+L2aiK/UxgJHTRtVoYbD18N2wFH2
      YopjsVj1LDigKu/n83kKhULV9aF+x7c+wsyvvo5j86s//9dsfPYBlNJYE4kDEEA+69ugUCTC
      +akEyZLgwkiUbAniZpxXFAMtZJIWJa7c3uTiW2N0dZVx1B4ScQ09qBKdqE3NYRqCO7NFxgZ1
      Artm02PH+gDJ6KlKvKusyzkzcLKXKdmD40hyRYmuCQK6sm+iR4KHo580Q33xfibWjbUk22WD
      4yNhpF3m0y/n0CIRXj7Tx+27S5w5M0JhK8X1R2ucfeEIifDhm1S7oxovn1C5N53mP/1iheNj
      CY4kBF893eLM6VGGYgZWqcTNp9u8dHqA5OYOq3mV4306n36xQM9YL+ePdrG0JYkP9VTbaNs2
      TnoBpbEXdxWPtkwmXn21+lvTtKp8703MDHtJ2Vx4Zf5WLhTFYpHPP/yA0pefMkiOjYJDfjvT
      mTs0QLGQw9B9xAQhGBzs4fR4N5qqEQ9qIBTGx3oY7g0xdXKEP/zJJc4ORxgd62F8OEIobKIr
      gmCwltsn4ionRgw2kvWbHgJVURA0DpZQVYVoSMU09k/+3Wq2hWd2iZbNPiSZm95kbXFnt1Iq
      588MkdzeYnF5m+nFLXJlm08uLzI63k88+PzSkCtCcGoizGB/gv/y6SqWHuDS8V4eLiQBWNlI
      M7u8CUjmF5KszW+T2tgiH+vi+Ghl93Yx28/E5GS1zLu3rnEmttyyrzezkI1dJBLr5srHP2dp
      fppAIFANm6wPn/SDn6enm9TNtfpEIhFu3/ya1PUPGZA5Tg1EebCRxnacgxBAHq3JktYIiqoQ
      DGggJXaLIA4hBOvbNonuWt/xGzcXKUuQjs2167N8cm2JYrHIhx8+4vFiiq21bX756ydspGvP
      3vJyBympKqzpjU0erRb56c9usV6wuXFrqXVDpM3cXGaf0WifXtDkHghOTPXjxpEIRSGVTLOV
      kvQk4oz2VuTopbxDbifN1Zubrev1DFCEYChSIKFJ7tzb4fNrq5w/UlmVR4d7iQY1pISpY/1o
      KoTiMUbCDp9cnqdsSQLdx1HVvRXKCIQotojay5dhWn+Ls69+l/sf/luO5v6OJ5/8u5pnWrk+
      wN5JmeFwuBp8H4/HicfjxGIxIpEIa2trXLj4IkY4wkgiRMgw+IcvjnK+N9aZCCSlxMnP+Spu
      5VKJP/sPV3nlBxfR0zvcm9miQIg//O4R7HKR//c/fM63fvIWGw/nefA0x1tvjvJfP3zAP/3x
      JSa69H3fSaYtAp6VZv7eAjfvbHD07AgRoXD8WD9378/yi7/PM3IsysNPl3n5e2O8cqGbm3e2
      +NbrA/vKrIcRCrF1d5VwMMzc7SUyqs4nV+cY0AVrqsLC3DbDgxHm7+/gmAVi0TA9fQOUM2Vu
      X5tGhqBvfITlhRWK2xY/+oMLhIXclZ2bdaTNjbvLPFnMk+hWKYoA0zMZwgGD5No2j2a3cKI9
      vJQwmZ/NcOR4a9+k5g7kzZHZzjC7XGBy2ODq7Aqnx2JsbWWZ3sjS16Uyt5hkZjXN2vw6D2fS
      JBIG8ytJjHBl570+N086tU3rFE4ClRJPr/89Z6JLBDTo03dYXVmuHoLtZ83xEoWu60QiEVKp
      FBsbGw0VYikliUSChKkRyVfq2h+rWALbJgApJdvb26hW0ve+phu8fXEMWxEcPT7ExmaO8XPj
      gOTm7RVeODmAhcLYYJSvnu7Qm4jyvZeHEU1FhQrsYoGf3VxH3cmykiwwlTAp5grMrpc5MhJm
      Yy0DAyqyXOCnVzb5h+8fbatNhmmwuZ5k7Nwk018/4cJrp0jOLnN7C04lNE5/5yRfXH1Id28P
      o315+o4PcP2zHZCgGiHe//YAv/ksyehIH5ncekW5bkcpFSpvvX2St4C15RTjgzFOTcQAgaII
      /mh8V3g+1csF218JdSElTC+Vscqgqe3FVu9HgEDfMAEhONVj88OXg9iFIpuxIIMxg/9xssJM
      jgzGeO0VAMmxyT4UIVjashk4PlVTmmEYlGxqnAGhdiUMGXC2fAXHFuzmVyBqSra21tDNaEtj
      hKZpRCIRHj9+jGma9Pf3k8/nCQaD1TDJqj9QNsvlP/vX9Ows7C+nk26amX7CRL+DXySldGw2
      kjlkMMdo2GEHk8GwQnIzS64kWZ3bwDQTXEgYvDLcxeZqho2dPE6owHh346gnKSVqwOR/+IML
      3Ls6R1zm+epRka3lJNFgAKegUMxYBEM6n3+5TKInwMZOkagZ8t0Y8UIoCsdOJhjsi2BODdLX
      ZSI2VArxKBODBp9fecKZM5OQc4gGIwRNk7PnFRwbhLRRVIMzZxM8uj/Lk/UirxyACfcPxdzK
      +NUQVW1daF+3ypsXw7SZgb4p7jwtsJFy6I+bDDbcLtnb1Noq9fDCYG1axZNnLnD13l9xaWjv
      AD+/iexd4QFiJtxaXODM+ZeqbtGN4HqKZtIpHn/0c5yZWwSdInlHQDBCz4vvkisUsVNbaCuP
      GU9No8j9IlVHBJDeeMiRPv9edhyH6HAcdIGDypsXBynn89xfzPHWa5MUzw9gazqLM0niY3FG
      +gPkrTgBrbU7sxCCgKFx8c2jbK6mOHs0QuB4bM8mbjsIVfF1vWiuRAlOHq0MXvzUcIXY4nFe
      GujC0ATvv3Ny3xvjI3truxCCgW6LzGgvY0d0vE6ZcytlylaTyeu9JX2u1WGgRyPR5T9c4ZBK
      tuAQCz+7spwr2ATi7Xux2hiodUe3mqaJmjiLI690ZKZVFUF58zHB4Nu+O70uhBB7Zx7YNrG7
      HzCsec4/yG5Q/niWASFru9THXN02ARQKBXRruaHPv6brnDwxWHNNyiCvn6+wkUCo8nfqRF/1
      /vnj/iky6uGtdO9AbN99pYGI4CsTNvmOEILRkW5vATjS5V5uMIeohiBKKVE0jakjffvKigQF
      PVG3w/06bd/+cvWa9Lk1s1hkYbWMrgu2dmx0TXB0xKA7plIsSaKhw7EURYIquaJDPNzechJT
      NkhubTIwOLRXZSHQgnFKeQh26HBqUGhqznTPD3Mzlw+NjfNJ3ykGt27VzE3dJ3Gw33xomwAC
      AQNLTeDIbdQ2bYnPI2rKTzZstTPbLpKrm/zssxX+8CdnCSiw8GCNG3MpLrw4wsy1GTadAO+9
      2cfVW6ukMiY/+cEYNHCj7olqDCUO5m7sh5E+SKYspISzkwEcR3LrSYEbD210rfM45EY4Nhrg
      yp0s6bzkxEjrlSBq2qS2awlASolhRrAbM/GGsEO14lT9weCmaaKqKoVCgcXFRTZWlunNrLQ0
      ATSaEx1khlPRI6PY9uOGfh2HihYtOmz/fYBoT5zxyAauUHb56RKJrjjIAla0j0vhHBk9xEgi
      yExmb8mtJ8pdVyIfOHxyZYY3Xp5k+nGS41MVZffJgw16huJ0xxpPOKtUZmlmi7MXKgqpoghe
      mApSKjv89cepluGj7SJgKLx1McIvv8xy+2GSkLG/LbLaSkjl4ff+aP+qvLM+S5sLPFDJS3Qn
      2cOJS29XSheCcDhc3V123SLy+Tzr6+tYlkU+uY716z9lvFRxpjsI3+ssLQrOc99F7QQH4vRN
      XtF0FW33nCfbkWiayeuXBvjbj5bpMkNkCg4JAX39XQzfX6IswfDrj4Z95JBZyXF7ZofNmS1S
      mSzJbJlgGW5MbzB+tJ/c6jJKtIce02EpZXGy2+T2UoZL5wfY2s7y5VcrDPYqPJzd5pU3pogb
      Cm+eD7OeLB8KAUBl8r17KcynX5R4dxL0Jor4bFJB1+odDx1E6ilKE/8fLwplh882jnHm9R8R
      i3ehqirRaBRN00ilUtUJ73qCSunw4KOfM/b4I0ZpnjepFTrqsYmjZ/n6k48waH46oJdI6ueb
      oipteRZvpmwezRX8ntwHvzntp2MCZPKNLQurS1tsWmUePN5kdSXLt18a5mefLvHKpTG2n8yz
      KsMMpzJ8dX+DvhM9dB7wKBgc6WV7cZNCqcz0epnBLoP1rMobL0/w4P46m3mbf/RmH1cuz1Io
      WuTjJuWyJJ2zufrlI97+8WusLe8QkEWWMjbxHo3+Ho2H80VOjMuWPkbtwtAFL1yIcflmkreP
      NZ4mg1Gbhw+uMzhUyZsipeTW11c40bU/cqsRlnYEE+feoTfRV02rXi6XmZ6exjAMRkdHAVhf
      W+XJ1V/Ql77GzuNtYmXJDkb7Z615uiYqbHpUuzMC6B8Y5L9eyxFYfOq709mqEptqgLd/PE6s
      DQXrrbMh3yOA/D5y82mBC+56Wzf+lbzLe4t2syCdgeFe/sFwL9JxKB3pIaAr/P77lU2oscSe
      rfv9gc58772Id4eYGNb55F6OgZikVILjgwY3b84TH+1jytHQBWTKNoauYQRUwgGwgR/84AJL
      qQymVcISBrHd5UdTBWP9BssbZUb6D0/vCBgKTotVNqAJCotXsazvoygKc7MzrNz+OUbIYatO
      B1AEjPd4PU9hJy/JDXyXAIJgMIimaSwvL5PNZhkZGUEIwZ0bV8ksXGPm8UN+fLSAEZHoF4IU
      yq6dtoGhoREXBFa3bQrzB4gHOPbSqyQXHqH6pXJogZxQGe7V6Ikfrm/L/HqJI8N7/LiZUryy
      ZdOww9z3FYUmkZjPAJUjRyoE9ePBWt3hjBzcrXfFCvW9d6aq9yYmekEIxGic0/gbAoKmYH3b
      OjQCsGzJvSd5Tg+07ohBfZNf/M2fEw6AvnODHqNIxscEvJS0ufzUoisk0FWxu1Em0MQ2I8cv
      cv/+fTRNo6+vj76+PnaSG0x/9qeMGwtEYpId08KdbMNRf82kXUx2K/ztVldnBKAoCsNTJ1nR
      dEJWqfULvwW4UUPwbGfZfhPwek96c9t4Hf3ce14fbu/Ed0MGE3GN6w/ynD1aGxfdKYplyVe3
      MzgFi6GgTV9Pa2YlcOjOXeV8QkOJCcA/QEdRSkwlbI701hJV2b7C3/3ldSxzgDOXvs2DL79E
      K20SkUnOxDK75s3DVT4VASfHjc5XgK2VFXT7oFvuzwlVh9Ra06hvDsrfISV+bXGTW0+3yNkK
      P3rnKEiHucfz5CMJwoUd7q2VefXsAFdvzhIIhnjn0lhVGXRP7XQzJBu6oK9bI5W16ekg2XA9
      ltbKDClFjo0rCNHeSi2pZIdrJwbc7wldFfzgpIXDIsWVPyVkgNqBBemgGOs+SGrEUhHlWV2F
      nwO8k99xnCoXVRSlZks9X3C4fNtV4mu3YB1HNrdyNdzT2lXDdr3gNlM2jiPZ3LZ9F+ahhM7R
      EYP+kV5eD+t89mAbRUAuleXGdJauqMbK0jpnLo5COU96vcTF9yarOXHcDAf1GRIGe3W2089G
      AEdGDD54DMf7Wk/mdLZINFzL7VPZPEJCQRj01e1MNwtEclct4/l5fu+ry+2dQOfeoOtPH6Ec
      Qkru5w2XCOpNpW+cM6uJvepx41GB00OVWIJOUTuujbu1bEu+nilydMQAJNdvrfLipQksy+LK
      tceUbcGDhSQhR0dLpnhiR3jttTE++3yG779/DI2KF6SbSrAmzZ9aOVHzWbC1YzHUPCF1FTOL
      SRJxgy/ubTN8dJzZ6S2uzCR57dQgtqGwPLeCowXpCwker6RIK92Eclssb+i8eqL3mbOGPAsc
      oCjUzghgY32dzL0btOOc2xDicPL1tAM/HcA0FMwGemLAEERMheABNOB2N+VKllN1WpNWGbO7
      i0RY51efTvPOOxewCkWeLliU06vMZUqcGdW5+2idom4Q0DSc3dXMMAwsy6o5IEIAC2tFkqly
      Je6BvfiHaua93W5377H7N2AoTI0FuHknzZsj7bd/bjnJxNEhFleXyZoRXjnZj53Pcn9boV+o
      LM1sMG2pvP+dEf7jb7Y5EoGZ6W0uHO+lHe8Nd56UbUm6cHj7UOtZQTiid+YO/eThQ8K59u27
      zcp6nmhWvivm+E7Yb2hhc78sNIOXz/WBtLl4Zhhd09AjGmdPgZQxLuw6+40NVSxDQggUz6ZT
      /ekog70qO2mdoW7Vk73CkyLE8x9uxLHbDfmSw6+/TPGdcYeg3p4coioKQUNHagqGGWAtk6Lw
      SHJhMoZSKvBoZQdTE5hBA1NXCOoKt6c3GYg0T+LlN362U6mj4NkZqBCCgQjcXegwKH50YoIn
      fUNoa4sNC/4mOHtzOMzMpJkcC/B0xSISVOjv2fPrvX9/nompMcLPP21n+xAqXbG9ZK57Ma67
      t9vsVyEEIVOhUHIY7DAvaSSokAgLEpH2uf+Z45Uc6HObFtrwID8cVpEIVEUwOQH22V4UTa0S
      3sXjXcRPRhjt8ffcbYZCGQplAdLpyOWh0cqsCHhrqNzZGWEjo6O8/j/9b3z6r/4PQjsbBzOo
      PCf62PMNkuxsF2FEY3lph3tP13j/neOsLq6y5RiYuW2eLOeYGB/kwlTzDS0pJY8eL/Fow+aH
      b4xXoiCkxY3baS6c727a/lymSKbo0N9b61QvgJXNMj/7fG8lldLNdVPxuXIcuzbKSlI1j8om
      Hejy+2LB5v2XokSCoqOJVolU7XxU5W7W6vrIMFXbv5KoarM6SfJFC4nA1BUsp3JkLsDTLUk8
      plPZEgTLclC1ileBlHueul5YZZuNbJmh7iDlkkXRloRNDQk4UvDRfIcnxAghmDx2jLkf/gHr
      //H/qd0M8zzTlFvV79S2CFrpBG4ZhWIRq2RAyOSFsyMMRmGmoFAoleiLBbl4coLVtZ2W5dml
      PLOb8KPXxlhfXuez+0leOD7A4nKOgFLg0Uaal8+P8PDxMl3d3eR20sT7uwlZGW7PZjkyOcDN
      m4uI7iDvXhje9TOCwYTOt17ecyBzsx2oqoqqqpRKJQKBAJZlVeV827bRNK1qCXIVfDcA3ItS
      2eGjaxnGenVOjbe/MZbo0VnPFOiPticCFXIF7i2ncdQQKzsZpGVwerIHISVzc0nSCE6NRLk/
      v000bJJPWzzMZokEuipJE/bB4ee/eYKpScanRlEUyUBIkCzAtYfbpESE+ybYjsX6VpmJ0Sip
      7RSKYzOXlZwc7kVTJMnkDuFYjLt3ZzD7+zlZVvmPv1gmMRThnXNxPnyQZWQ0wWJ+s/OgeEVR
      GD42RUk7vC33Z05gW/NLEKLAT79aY2oyimZnmVkvYUmLvp4QgwPdmIZCT9w/3MnLYaVVJhQJ
      g4ClpQLf/9YxHk9XAuc3ShY/eG2Qzz9ZYr2sMN5lYDs6s4urTK85vH1xBD27Q3h8iEDGIt3E
      Bwkqbr727lkHe8qprDHnuvBmPvBLF65rAtNQmBzsTAw6PWkyk9UptGlJmn60jho0COhq5bDz
      6TlmMpVY3keLW8SCOtvraZLpEqGAxuLyJuGg3tC5TkqYHOnjB+8eY2tlh+mNHL+4Ns980mJ0
      MMDrr/Uys7rKXS3CkqXzn29nKQ70M6tGeWTH+GInzC8fp3kgYtxcydN/fIgTL40joyG++09P
      kZg6wt/ezqBGTByKjMU6tAJBhWNb5bJveJn3mYaTuu7y4esMgvOvHef87q/+FyYBOH2k9sC7
      kN/hc3U7jlowipW6z88vpzgZk3zwm3uMjg+RTzlIJ8dffrLECxcHsARYpQLpfJlQVxi5UeSL
      O8tMTfYzd28BYQZ41WzMVaWUlEol7t1ZJxCSFBSTLiNFMBpEdSy2Mzb9/WF2NjPo4SC6XWa7
      AGP9JnOLKQZGems4qhCCsUGdpQ2Lo8PtE4GuCV48G+bm/Ryn4xYhX1fXPQTjATY2dphOhZjq
      17m7DSc1AImmK1y+tsLbrw5AucTVhxsEDJ2FhS0ipsKZsdqzzyrzQLK+uc2VK0nM3m4eLReJ
      h3r5YmaLf/adQeZzZfr7unn97SE++5snrBQlVx5lef1EEDtQwrIFvTGV6e0SgyHJUF+Ykb4g
      IuzwX/7zAo4RYysrCXXZzG8EmBw8wEYYQN/AAMVghEDGP0D+m0crInJzd+65xtXnkKzcpcap
      XCgK77xxevcZmDi1l4lNSsmru1Ya1xXw+0OJCsemEkmmKIJjI7F9KQ7roSgKgYBBNrnDrUc6
      f/xPhvj65gJX76dxtBIvjUd5tGTz4Moq731/CqtU4MHX06yMjbC5niMx0L2vzImhAB9dy4CQ
      HB1qf7VWFcHp40GuXk/xrSOiqbXGsh1SeYvFTYtEsMhwj8HswjbZiIpVllg7Bcpli4LlsJm1
      MKVkbTtPPONw2rMptscEFS6cTuAoOkEzwHZA5dxRlVeFQiJmoG4W6J6cJKDAt74zxuhymWi4
      zEAiQs9Sho0Vm8GBBNu3t9BDPfSNxDAUSVoEGT1ygfXNRX7/O2NsbmfpPf5DCtnkwQigq6uL
      QN8g1BFAqyCVsLSZXSjQEz/AqXgtIbl5fRon2sPJYZO//WyGH75zgrChsLm6zbV76wyN96EU
      cswv5Tj/wjD3HiwQDIV5/cVRFFEb6OHC2x5vIJAQgtqVXKAo7qCKanhes/yf9Yj39nKqJ8+v
      P50mLRRiAYViwGByJMbdTZvTp2N8emMRPZlncChCoD+GVsry5f1NfvDK0L7yzh03efS0wNH9
      t5oioCtgaFyeKzPRBYMx/6NKjx0d4MiE5OSWgxEOMNytsLaRIhyP8p3XoojXFRRFMNwbQ1UV
      vnxc5I3XJnmyZLGTt+kK1UsKgoFEjIdrDr+4bfPtN2P09e2tYCNDe/8dixm8EDMqO+4pm/VN
      wUvjGgFdcOS9ATJFuPkoT9op89a5IGgaY4NdTAxJokEN215k4vx3D0YAmqbxwj/+b7j2f/+f
      BHNp3wH2E4NiTpmnv5rFtsd56Xzk0INr4pEQa5kCqhrCMLXq2VmRrigvn7P5+kmGNy4OoZXm
      uHt9hYnzoxQ2t0iXHOJNNr+kY/Hx5WmUQJwXjgT58u4KkydGOdYXxCqX+er+Oq+cG+Lhw3Vm
      UhbfvdTPZ5/P0DOa4NxkV9ubZFOnejECKulUns1MiWg4iBlQ0AIqJwYdNjWYPB5C5IvkHOiK
      G2yJBGd7Ghyl2sT1oOYxHzH00pkQxZLkxs0dBvcHfAG7TEATGJqkZFVWXt2SnwAAIABJREFU
      j6H+eM19gKdrNkvbFjaCrrDKqydVrj4ooEoHQ0hGu+DWksOFYYXeiGDD0vnJ73URNpulg6nU
      +eFMkfRajksjCkgHR6ooQhAx4Hgv3NmSZHIOw2PH2Zy7AlJQsiRnele4PffwYASgKAqnX3iR
      /B//zzz4t/8Ks+wfleNHBNFSkblfTmMVx3ntlfgh+qYJuruCbOTyGAGDrt1cmo4j2V5N8smD
      FD95/yjXbs5S1Ho4d7TIDri2v90SwFecEgrnT4/wFx8ucG4qyhsvjvHRvTWO9Y2zs51lfnWb
      Syd7mVmzuHDE4POPniISMeZn5jk50eUTNeYfRmbupoiMd4WJd9WukkFV3QvYjwVwNZpIqLF4
      00gwbCcBcNAQZHIO/ZHmOTdtR/J4Q/LeC/tPZIRKdu4n6w7fvRTGaxV961yQQklSLDvMb1i8
      el7n8t08YzkHJWAQCTY+IBvgk2tZTENgZ0q8dVRjZn6dxwtpNCPKt1/q44MvH/HRU4sXXx3n
      L/7mMYXuIL32Bn86v0UoGCdsJkhbG51bgVwoisKlt96m/x/8MyylMtkWk9tcX9mqxtQibWY3
      c6ynC5TKRe6u72BJScSxWPt4lo8+28aqRr1IVhe3ObAri7S5/f+1914xkp1Zfufvmogb94ZP
      701lZVaWN6wim0VbJJume9pMj2n0zo6kXUhaabAQFhAgLAbYhbAP+7JPCwj7oF1gpMXKdUvT
      D61ZNdlskkM22SSLxfI+M6syK70Nf+PGdXqIvJGRkRGZkabIKrL+QKEyI6/54t7vfN8x/3PO
      3XkeTCeYmk0wu5DlxtgCH358j8XZFOGgwK17CVaWTcz0Mm48zPToFFlHIrzK/ammArH6WSaV
      JWjaWPkC7703xlOrZVQammI0hn1g2/jjPhS/H8nnw8jmsaRgjVlY+0u6rotprVVFc12XgrnW
      NrRaNeTNsC47r+Kcra4xOpFneJN8ANd1+eyexb52ZfVea/aR7RSv/cFNg6cOqFSGBARBIOAX
      iAYljvQqhFWR4V4/U06AEwe1TSe/abnIBZNBzeSp7uL4ejoasHWL9tViRgFcTMfi/KU041M6
      K/dvorYNM3rfpKlBRNN8BMPxne0AHkRRZN+Jp7jz9q8Qc0lu+NsY6AhyO5tEn59nIB5kIVOg
      I+ZnZGoJPRhlJrHCdMZmuCnIh//xArdvt9E9qNDSFKMlIJDP5Pjw+gwD+zvoa6rdyGIDBImz
      Z9eytv60LYZjOxQsh4Aic3j18yMDa7SC9ueH6rq0nde5OZIiHJW5Nz6HHQswO5vifjJHd6vK
      xEyCu+3NOAtJ3l+Ap/qiXBtPIKm+qmVkNrMKxu/Nced+EkWL8dJ3Wvjow5tkDZPOoT7mrt1G
      6uvnlSNNXPj0FvdSAf7kjf6a19qtg62/S+HSeJrjHVJV16XtgCVItMel1U6dAmndYTHjcGnc
      YqBZZF+XQkudCVCCAJ3NcqnHXDU4rsvF61lOdBR5Wx7+9tMxxI44jREfsys6pijy58+38tub
      Fsu6hq0FOfTsWxiGhZW8xvUpHz/6s+/vTgAA2tvb+dP/9X/nr//dv0b64jptRoqRpWW6Iirz
      aQNwmVnR6Y2G8UXCjM/MMxQKMJlIYQhBgncnuZPtxRhKYcoWE/N+Dg40cmcqsz0BqAJREgls
      o4RFMZJapXaMqvHay/ugzJvjOjbJfJiY5uPvdharOxzqjuJ4VIC+ptolu6vUrPEQiyokJY3v
      HioKak9HlNHpBA+WCrz0VB/XchJXro5zc6pAJpmhYPfh3yQBZjd2VmuDTECJMLJgYqcNjrSv
      f5YJ3WUqJXB1xqa/xcfd6QL9bTKCLPDmaaVYRCAiVXWOVNt5Oht9XBkvsJySaYhUF5pLN3T2
      h6x1kx/g0IF2sgWzmM5quZw+2MFk0uSPnmvk3Us6zY0qccnk6PEzXP1smeGnfoLPtw0yXC1o
      moamaXQPDHP/6kUuLKQYUASm0zq9sTAxtUhBDPsFBFGgQ/Mzni8w1Bin3ZUJujJqNkfyQo74
      cx0c7PZx5V6CfT0bi03tBXZaSqUy2VwQJWKVdEZBKNVMqozOrsMmK/Pvz88RD0vMruS4eS9P
      oyRg5h2OHw5y7doIo7rMD18d5tCwzeXL81TpOrt+SGW7zU64WtGgRDQo8fFlm4xhE1KK13Bc
      uD1n88bpMPFgsedCQ2R9FouqrD2fciHYbAyHu3x8cidLe0eA/o41+8a0XNJZh8yKQfPgRuFo
      bdoY1zkQKt7r5SMa794SebaxhfGr73NgaIgjR48VC3ht62lsgq7ePoZlEbclSsQx6azCmXZd
      l6aGOF47jGJDThUFCEmwcmmJu1o3rz3dt1fD+sqxlSu42Fml9t/fenMYAMs0WQ4pNDcEGDjY
      jiQJdL18jO+UjhR56nRnrcuUj2jj/cvGWi+iYZlcwSK4Wifo8wkHXyiwGixza6pb5ZO+nvvp
      BRfRchkb0+lo8nF3wiCgiIyNZekMwcnO7S1gixm4Pu2g+GVG795hPuXw4+//SWlceyYAA8MH
      udzWjTo5UvOY8hVorQ9VMc1KEFxUw2Dpw3He07t48Wys7txW24bl1OZUg+L9oUZKF64L2bxL
      Vneo1r5gO499MwGwbJeC6ZDJeRQG79j1/nAQ0FQf2S0oFJUor8SY1e2qY9lJ9F1VRKbmHW4u
      FElqWQPeOORf1yyl9pi2vp/rulwfL5BJmTzdK+O4Lpe/XGGwVSSTdnljSNxRyZeM4TKd9qEE
      VFpa25D9Z4lEyly1222SVwuO4zA1fp/P//9f8M6/+Y881xXl0lSSzsYIFPIs5HMEtEaONalM
      LywxV7DojEaYWEoiiC7tapCJTJagX2WgsxH1RCevv1JHjx3gVx+naIsIW8SDyx9e9SMn5m2i
      MR+qsvFBl3Pp62a0rp60lLAJB4RSNWTDclEqfKObXtIVinZDKYNTKDuhep6mC2R0h45GmeOr
      rWZ3SjvxmvpdHjUQbIeT+/ykdZewusVOt417Xhw1UF2bA63VO/vsBnNpgb++qtLZ1sjLb/4x
      7Z3dpb/t2Q4giiJdvT18prYSbWlFNxLYsg9NlmiNNZCetBhqUHFdl2tLOi2RADgOumkhig6W
      YlGwbaSCjerYGBcnedtxeeXlxk29AgCqX+SZA7vPopYlg74+jXgNA2ynuDZq0NMo1tXIuqgq
      FPnqtlPsDVDMbBNKK2Cxa+PWE2VuxWIhYZWuu12sqz5hF+UuFiz65yOagG44XB83UBUBxynu
      6o67Jo6SWKQ/y6KATxaQpeI/cVULFEWBBwsmNyYKHGoViUdF5tLuKj282AXTJwmr9ZxAFEES
      qi8Wm309VXb53nAW285y6fxHtHX8bO9VIAAzvcCFsQdM3rtH7/4uznbLXJ5aICZHwK8SWG3v
      GVH8HGiK8PndOTrb41iFHJMZi6NdrYzNLwOguA7G5Sl+azu8+UbLXg7zoaNS7bAdh99/ntzQ
      MKIabo2M0dIVpnuog5VEhrdOdHL35iLBxghdbQHA5crH9xl+fh+bLMDFcSBwY9xgKVU9OX/9
      sdUmloDqF3l6OMAHl7I8mDPpb5W5P2fhUqzn2RaXCa8WOhMFAUEsTtZygfDSMk0HCk7RoDVM
      F8t2kSWR4wMBRFEgCavnC+QLLtdGdA60iZhWcTGwHUAQ1qmodShgpSPzpsv1xVu8+aO1v+6p
      APij7fyP/8Pf5ecTVwnpK1yamqc9HkN3BQYbQpgFnasrBYYbg1yfTnJqsJ2JxRXwKZzoCHBt
      apH2xjX9THEdrKvTvA288mrzhp0gkbE3bcH5daCazu04Ds8Hl1DlLaahZXDJUHn1mQHu3J7C
      MF0+/nSUgF/DZ9n87Ye3SUs+gulF3v0gT3NjE2Nzy4Sw8dkydsBiIW0w2LcPpbDClbs6g8f6
      eO6ItuberUMSSvQ+F35/NUfOcMCF/+67kVJco5hT7K6u5hv5UzvdcSzbJZVzuDSS54UDPjri
      u5uijuvy+7sWx3tkPrxlk0ylmJqapKurqAbtee/Njq5uvv/P/he++L/+D86o6/34tqNwoiWA
      KAicjhTdVofa19ydZ/o3srZkXKyr07zvwquvt5QIafMrFtdHcmgBkcbgoyUElfBUmq1selcS
      EQt5HMskYQrMjc7jH2wlJoKRSpEXwkiCjqrFOP18P9c/nuDQUBtSdoXPr5r80Zl2bsynmL+9
      QqhLoq9VJm8XGZ0ld2gdj8qb0FdHdOaWbc7f0mkKiyWnhOu6ZTnHO0e5oFg2XB7TcR0X2XU4
      1S0TqyihuZMy+K4LsymROxckfNE+Xnl1gCtXrjw8ARAEgcHDR5j63h8x/4u/wleWNyDtsIeP
      jIt7bZpfWw7nXmtBC4hoAZFYUOLkwN4l5gA7yQhch6o8G7e+ywqizKEWl7cvTPHKd3o5sK8B
      paBj+DSiAYHZ2VnCzVE6NBlFFNl3qI2JyXmyssK5Z+KowQB9bTJtQZfpyWXEeIi07ey4lPzB
      /gD7uxV+fzVLcJN8hqrfpY5dwPv7fMLm4kiep/tkwoGN1aarnbPZfcuPk0SBFw+ImLbN9MoY
      ozcn6Bh+qfRM9r778uogvvPq6/xmepL8795B3oNEYAEX8dYsvyk4vPZWG7JU1AX3qrZMPpPh
      /pJJW5NESvIR0WokkrgOt+8sMjTUTGJqmUI0Smu4ojy4aTCvS7SvthraqsDsGgQaWlo5faaD
      xogPIgqwRsU898r+dUe3tARpbu5b91mHGoAG6O8pnvfOF1lcd3Ne/7oRlB0oSwIraQvJFTjY
      XVxo6p2AW8FxXcZmLBaTFkHJ5cVBGW0TRu5W162lhuUKLgFfcYeJaRAJqewfHCSbzRIKhR6O
      AACoqsqbf+8f8POVZaTr52GHq1A5JFyUsTl+/SuHV99qJ5ndno98M6wkCozcmGIg1EaioHFr
      PkG4JUYoICFkdYLtcfScRUdc5sq1KcLdjdwfncbf5mPOTmG6fppCPsJhH67jkLN8XJmcxZQC
      zEykWJxd4NyBRgJ1xDaqOTUdZ300uryKXXE1W/OElFMwNGXnZcwc1+XjyzovHd6+G3WzY23b
      5cq9Ak0Bh5NdEoq8NoE9Y1cS15KP6pk3lbtciS4963B+zKatvZPeZh8v/vCnjE88IBBQCYVC
      SH/5l3/5z/3+PVYjViFJEmpjMyM3rqPo6dLnuxEEAfAldW5OWwSbVfpbfHviN04nDXRbZGou
      TTxkMpbykUplcFJ5VhIZpifSiOEALREZ3ZGZvb+I2qhhpGxmUzmcdI5IyM9fvT3CS4fDfDKi
      IysSp/rC/PZSmmdCeSYTLu2xzVMUp/M+4h1hFNnl7V9fQ4iESTyY4/cXJ0EO0hjzMz05xyfX
      ZpEVhY8vPODmyBKaX+T3lyfJJLO0ta45Eu7PWXS3+urqILnRewVTcyYHu5TVZJ/6V+GaAThB
      4NKYSczn0Ncsr5LsBFayNlcfWNxZsJlOw1QSHiRgbMHmzlSB5ohEoEbQzbJsEDaWWrEdl4It
      MtwuEeh5hade+gl37txhZXmZg4cOIcvyw9sBPOwbOsCVvgFYWuvCvts8YBGXyMwSyYYAgrA7
      wpwHSRLRIlEyS8s4gSb07DIdnQ20KDoTRpzkxCRHm/oBG0UJkFyZo2O4l3nBZSWbQAoHWZzR
      ef1wM7NJm2hEYWV+lsvYuEaWzxYzvHS4dctxlL6jJDHYEcO2bBaWCpw81cPI+DJDvRoXPp/B
      3x5FkwUSSyaILkJAo68xwEpyfW6GbRdzbWtZIbUmtW27nL+RIW/BZ6PV8z3mlm0iKqVKem6Z
      o6n4s0tWd8lmbaRCiunFBA2RMM1NEaYMm5mkAgg8WDIJK1m6BprQL09z+oUOYhEVWYR337tG
      ytX4aCTO6U4Bv+LHdR1wHBTZxXRF7t9eJN4eQcShMaaQNx2iIT/JtMFKVuHunETu1m/Yf+Aw
      J06cXNd37KELgCiK+KNxDEFAqDHxd1IaRQCseyvMrkRo26WrDKC1I0JTzuDMT04RC0ucHGot
      VZDbB3DSm7wSR4f8MFTM9OpshhMH4xvyfvcBrlP83HbCHEnKhOrZaN21zpQBv0xOEDh6tJU7
      95dIZ1wc1yUQVHjmRAcff3CLxu4m+hSHdNqgtTVKwJdYdznb2dwCr2UgT8wVWErBD54P13wv
      F27lGeqQS+1Zq6kgqazNzZE8w40q719Is39/iMzcDEJBQtUF/J2dXB6bpbdfYjmTw8zkGBmd
      QYq3cqbLJdDYxXdPxJmcTvP+F/dZNMLcuT/FC8e7SS0u0yaA1hgmbFosLGU5/8UooViExo4W
      Prk4x3Je5fSzZ+jrGCIej28gKX4V7e7oO3yUdFsfqaZO0vFWcmp4T+pjBfQ8l29kVle5PUDZ
      ZURx80yocghi9WJP3ueuy5b9cj2yWJ9mMnY3xe17Kd65vMi9sUWmkzpTCxbPHG/hvU8ecPpk
      G5+fv8+RpwcJSyYPVmwaAzaf3FwgK62ntTjeBrD+U37+yy+ZyVqM3R7nb87PMnF/mYJpsZLK
      Y9kOMws6p4d8jM8lMfIF0jkT27JZSeXJ63kmJnOk0ga2Y2NbNomUTr5gMzW+vC6pKaSK2C4E
      VIWzJ9u4fX0e25IY7AqSt02SSZ0W0WBiXiamqQRiIc4cb0MyXfAFyK4ssZTQWX4wT9+BJg62
      i7z8Yg9vnW3C5w9hOS45qxhpc2ybWCTCod4G7k2kafnOn/H8W3/Gj3/2j3n5tTerMnT3jAu0
      FQzDwDAMCoUCyZUVLvzi/0O+dXHdMeUuxMpVpxaLcU4J8vKPu+lt3X2twy/uGvTv04iFK8t6
      u4yMLrJvoBksi+sjC+Qtm/29TYzdWaBzXzMdjSr37y3Q2t2E5zH0xvz7yylOZCdRpc0zwTzk
      bZEpXWbSUFDaY3S3+oloErZlEwrJ+OWNL7LWKv3O+QyvPB2qEECHS+cnycoKPkfHL2noqSyW
      YaJHNQJ2gd/d1Pnvf9jL6GyChdvzdB/twZpcZllTOTMY5taIzq/fn+bsM1F6VIu7hQBh0SFu
      uRx+fgBNXBvT25+leanP4fq9ZVrbGwhbeUZWdI7sb+X2jRnQAgx1hPjF50lee7aZ1mY/ySzE
      wjKL88vcnc0z2BlidCZLd1sUWRZpiSqM3Z7h7jK0KwoHOnwYhkUy6/DAaOHwCz9jeipFc28X
      +7rbqj4b+ApUIA8Xzp8nnVhhKZHgyNFjvP6P/yfe+8W/Izk+hi+xiJZe3mBEVabvVSLr83P0
      5XZ6Wvao0GeNRXr6zjQffbFAx75mNEmkuyPG+c/GuDplENsf5sv3HhB+tY33377Dd/9OnE61
      Sl38bQwjIDkMhAr0BU1yuRzTN2Tm8LOch+7hJoKqQEvch2W5CCL4ZRFZKnZ3wS12XRRg087x
      gk+hkFpGbm+CrINlWhw41c6n5x8wlo/x3KDFyFQWB5dTp3u4cH2Jp0+3k7w6zUzSj1NwicQ0
      2qIKZtagq6eJzNgcluOlb67dS1FE1HCAM8e01U80vCIWJ06sEdOeGZYpuD4EUSa2muff1NJA
      0yoTpqlxfXb+vuEO+l2Xm/cKzGZMmkMBVpIOQssZuvoG6e7f+ql/ZQLwnbNnmXzwgObmZpRA
      AFEU+ck//Atc1+XdX/4nxt//NdHkQtVyi7WQD6ns79680vBuYeV13r6+TMA0WMkUCEb8hGQL
      WW1goAs+uz6P1hbi3d/fQ9N8zMxn6exd/6LqDQhVQhYhIjpEfAWggBWCi6M2ruQwYvmZzEgM
      RGx0yU+wQcWYTSAJILs2iiwgdTVh2m4V4RPo64/S4wSwA0F8BRurM4RlFrCUCP1hH1o4yEB/
      HFyb5fkkQ8Mt+FyHeFucvrYYHdECH16cwh9qIS7n+HB0kVdOdOA3LSrJtPGQxFLaoSlc3Llq
      2XzDHT4uj+eZcF16NtQyclfTLot1l2zXRVqtmtfZqvDF/T4K8afwRywODx2oX339qlSgWrAs
      i2QyiSxJ/Pb//X+wvvwE2VnPYKz1wBLNcX7wh+3bjlLWwhd3DfYNaETLWJuObbOcMrj62X0O
      PtXOghEgNzbD4bP9TF+Z5s5cBtkv8vTpTu5/+YDIsV72NwbWjft3XyY5nZ8iUEMFqiYAW71A
      14WsLRCSXSwHdFsk7FtfrW9Wl7mRU3FCKgeHwnQ0b75TCoLA33yS5sSgSmezXHNsUCyK9cml
      LC+dCGEaBrbkJ1CDlzW7ZLK4YHKsZ/P7u2aef/XuOCtJhx/98BB9bX7mHszwqwtJnm1VuZfN
      EVEjBDWLhXmd/Yd66GpVuZc9w6nvvIksy9t2sX8lRnAlZmdmSjUtXdflvd+8gyTL/ME/+ic0
      /ui/wajRm6r8yxUEkb7jDVtO/pp5uVVQ7VWLkkRTXOPcm4dAd9nfofLMi/sIyQJDpzp567uD
      vPHKIA1RjVPnDpQm/7rrbrIB7JyjD6FVcp0ssmHyA7QGTM41pDjpLjI1t3XPZdd18csCubyD
      ZW/eYDCZddFWVT2fotSc/ECxd5lex/cURJysSVARuDOmY+YNLt/X6VQ1RMUmm8pjCzLHD7Uj
      uw6yX+TCWJQTT7+Oz+fbUXzpK1OByuHz+9e4GpLEH/zoxyiKgiiKnPvRT/jrifu4Fz6seq5n
      GwhAOues0iFq32ut1n69DMXaF2vradjwmVTFIK02hu2gFulrNwHERMZhaqGw2mCCEkHO+zmb
      SPHLt0c4+MwRLl68zY1r8J3nh2kJCnz++TjX7i1x+kw/C1MJro0neeF0D//+g3HOHHhqy3uL
      okA6v3XU3tZztAy20pBI09AEb78/jataXLm9iOM08vJLg1y5OsWvP04ycKQbXD8dA8+hKNW7
      UtaDr2UHaGxsLHU3yefzvPvOO2sDEkWaB4awhfKGyhUTSBCQgPFLS8wsb92xclsTcBtsybrv
      u8ntKw3/za5d7/eoln9rmJDKQTIHKxlYTsNS2mUh5TKfdMkSpiceZnbFRJGDvPlMJ5OJAggS
      Z0730tfVwIG+Rp471sLRgx3Eo1H2t9eoSLdxQGhqsXTKZpDDUdp9Bv6mMM7iAp3dDfR2dvP3
      f3qEF59t5daVWY4e68E0/Xx6UScX/gFHjp2pbwy17rmrs/cAqqry2uuvr3vxA8dPMvKfw4h6
      Dsvnx5L92JKMqIUINDYTbm5hJbnCiZbZuoNg9QtBffmr9cJr3rAZ9mLSb4XWBomDfbVXStdx
      yY5KZNr8jF4vsLiYQwn6MQo2qflFwvEm/CJ8cWeRo4d6mJ01kSWXguVUdcuWQxAEWhpkZhMO
      nZv2HRY4fagLKNoYgiDwu3s2R/druC48/9J+cnlo7z/GK2f+hK6u7l3zy752ARAEAbUib6Cj
      s5PT/+ifous5QuEIsVgMv9+/boWcmnzA3N33GJ1doLe5WA9/15PlIXmT3OrRKO+vLKzkmEwX
      iAQU+pvVr6WVcSaVpRDyEbB1IqrKSNphOKRzddSgJ6Zx8nAYXIeOvlaaQjIXZxdpDfsYn88w
      2FGjeGgZelp9XLmt0xGX6vLayauJH4MNAtfHDDJ5yOYluoa/x0vfP1OaD7vF1y4A1SCKIocO
      HyaRSJR6/HptT6EoNJ1d3bR3/DnLS4tcGLuKlbjJYHOelmgx+rqjZ+OWJY7UOmSVqlAvBNai
      seUCuubZAsUvc2lqke8dauP+VIIlR6Qj6COmSuRcgfHJBPGmMJptcTdp8vxgQ03dtd6+DJWI
      xMO8cDbM6JRBRg/wwqkgjuXQ1Cau2ViCSGdL0WOohsK8ONS8zY6aXuJl/S+nMSRwa8xEUiP0
      Hn6dEyefQZT2Lmf7kRQAKBrHmqaRTq+xSB3HQSr78rIs09LaRnNLK7Z9jrHREe5M3iDsPKA7
      nqepRlnvelFtLl25nWP+QRqxVN2tejbtOhgmUsP6Y8onaljz0xBSaAkJ/PKmTiQoEJMU/urz
      Bf7ipX5kyceV8SWaXBG1MYjD9ow3RXIxdYtVMmZVeII9t2RxejiAwOYGvk8Wt5WOOr1k0d0g
      brB5ttq1fZJIzC8id5/j1Omzdd+vXjyyAiAIAj6fD0mS1nV6L+8C7zWMhtU6pQP72Tewn3Q6
      zeTkPa6PXadBnuZAh4hf3p4XZXzWZHS5H0UJrKsnZLgOQekiZ4MP6v8yddiKsgAIImamgBHw
      k8gUONYZ5t5ckmsTeYIxicZGP1/cX2J/d4R4nTWTAIKyQyS5wtxSkLam2oy8+9MGAb9AvM4e
      YdtZW7K6TUTb/mKUNVwmzX7++Olnt31uPXikBUCSpFKDuEoEAgFCoRC2XQy927ZNJpPBdV3C
      4TCh4aO4B46QSCT49O4NpNxd2rUV2uPrG12UwytaZRQglXUZOvwsDQ3F2kTlRKq52eNc+eBf
      cEhboQ4vaF343ipV+k9e6cFZR55zOdbtrqaTugx2NdTssbUZerQCd6bzmwrA1dE8f/BcuK6J
      bdurkdk6i1U1x3zk0ma9wy0hUxAYPvYMPt/DyVl5ZAUA1gxk0zQ3CIG3mnsqkRcFNAyDfD5f
      2lpjsRinzpzFsp5mYX6OyzMjOHZ116kRgjsrAmICHFGmU1uLkJfThlvb2pBf/Sd89tF/4Kzv
      1p5SMap1nlmrkCdsKDNeLyI+h9xClnwhRMC/UWoTaRvFJ27JWvXguMUstXqRzdsEd1DBYzYX
      4dTwoW2fVy8eaQHwuiFW7gKu62JZ1gYuu9/vx+fzUSgUNvjCZVmmvaOT9o566mlujXhjE8p3
      /x6fv/N/85RvdEc7gWVZzGdtmlWJB4k8jgOdcYW78zr720NosojrOkyvGLTHAyyu5MjYAv1N
      KhNzGRRNoT1afxDokD/N+EycA70bo9WSVKzz88nV3MZx2nBiMECkvEqDS8mvP7VgMjFbKH1e
      DcmsTUdUWucG3Ur/txywY8cJBHZf9KwWHmkBgNXEkECgtAt4D80wjFIP3crjHwaqUbW1YJDe
      c3+Hzz5/m6HMZzQHtpOj7DI+m+TCuMEfnmlBwOXzkQQtmp/mZj/xdsNcAAAWgklEQVTn72V4
      aTDC0lKG968s84cvdHNpbIWYVGBqpQHBdkjdTPLKy92odQrfgiERq8IQFQSBsCbx3afLGnqU
      HqPAhZv6xp1HKDabTuVcEhmbdrFAo+ZWnLv2oxuBL6csrksCql8grIpENbFqsbC07vDpLZ1A
      QKbhUJ3Bth3ikReAartAqZaMZVUlQNWyG/YClTtLJNbAydd/xpXzPUiTP6dBqVcvEBjoijMx
      N4/PLxMSHAZ7GsjoOY53Rfj8drGTfFNTmIFYBkSBXLbAvAjP9/j43fV5AgH/Knu2PqGf9Uc5
      2FR7wSgvZ178rsX/Ff9aNbZi55civWFuxeXLezI/eTbAx18YJPMuA40uliOQNaEt5OIru+TZ
      Hoe5dA49JTC5BPdsAcN2KVgupg0OAqIkkjQETrVadMRcrmUydT7PneGRFwAoCkEgEMAwjNLk
      8wzfalBVlXw+v+MKZbWw2bX2Hz7B+MRHxN2p+mwC1+XuVIJrkwmGBhu4NZ3jxaPtXLmT5edf
      zNLZEuXqgzRNGlyZSuJvCSNJIvEAPFg2CfsCCE4By4V6zUNJ3d5uObssMJFsIaROcn3MwHCC
      qLF+JDmAFDWYdxVOPNPFZ7f+hhWxH7exm4uYhKMRbtwepTdxn5jfZLilKAiKT2QjnWrjGM5P
      2DQGRT6556L2LNf57XaGr50OXQ+8yZ5OpzGMtQRtVVUJh8MbUt3Kj92JADiOsy0WqYdPP3iH
      FzO/qs8ecF0c1qrGwZp6VbAcJAHGl3X2NQdXc4SLEWUbAb8kYFkOgiQiVzFaq33ngiPyntXO
      Wy/Eagxn4zmf3Q6gNh7j1o1LuFKMH/zoJ7S0tK5n5RYKOI5TVU/P5bJ88NvfYD34kNcGTO9r
      c2clQFLupFmYoy+U2bBguG5R///bMQg1dHHuZ/9s84Yju8BDLYuyV/AeuOM4FAqF0ueO45RU
      oPIH5B3vGcPbRbWIbT3I5Qv45i4SlDeqQY4L4xmZq7kmlnI2M7qPgiMS99vrhE0QBGRJRBRF
      GoLFcL+4+ndRLLZfKrqIN5YBKR/zjO6j4EpoUtFR8GkiTmt/DNtxSWZcgoHi9UzL5d4sLCQs
      GiJrFacFQaA9bhGRJmmNu5hmgVRWoH9gqDReQRBK6mn5Z94/n8/HwOAQpr8Jc+4KCV3gjt6J
      232O5974U8zwION3LtOsmhXjLy4Kd+ZBFFzahp7ZFeNzMzwWKhAUX4iiKDiOg67rxcil45BK
      pQgGgyU6tScIkiTh9/vJ57fmwe8VBg8M8+XoMTTzIkHfesEbyYUwz/x9TvT2AcVdanriHjcu
      /GsOhVJ7ary7Ltw2msjFhmlbOY8Y60Y9fBIiTQhNzah+P1fu3cLJ3EEWsiwWBkin0yT1BQ73
      5Amp3jMU0AIgSS5ysJuTp5/b1ji8hWn48HE+mHuLoaEhXujtL7muu3r6SCV+yue/+xf0NUmI
      lkNjg4YggO0W+SMHYhnGRu5w4tRpCpk0ll9Fq6fMdr1jfBxUIA/epDdNk2w2i2kWVw4vXuD3
      +5EkCUmSSrtFOp3ePnuzzOOz3YlpGAZ3Pn2b1rm/pTtYKPn0P+RpTn/vz9cdKwgCk/dHyX36
      rzgaWqmZ17DdMbgu3EgGWNj3E/YPDjKwf5DyXb7ciZBOpZBkmXQ6hd/n58Pf/BtePZZClsBx
      BKYWHR4kmggrBoQOcvLMOVRVq3XrbWNxaoJf/Iefs893A3N6jqfPtPH57SWOD7Xx2+s5DrW6
      jPuO8cr3/pRP3/+UwXOvkr53m9aBw3S1VFfntoPHQgXyIJRUAbFEg3BWozGWZZVecqnMnm2X
      hGQ396v8eTPIskxL7xB683EuLfpwM/MsGTLhUz8hHI1vuH4k1oDYfoyJO5dp8VffrbYrAClL
      Yq7nBxx7+iz9+wbW8afKv4skSaiaRiAQIBKJogWDFGwfUzOLLOfizBiHSORkzrz4U5I5EX/u
      U2aXTDq7B2vcefvIp1eYWkwwnQ+SXpkjn0hz7GAjH302yd25BV440Mj18QlGFxSee+oglqJh
      pXWu3r7KoQPDu77/Y7UDlMNxnOIKlk6XJnkgECAYDJYmTD6fx7btkqFWayeoVX2i3K7wfna2
      E/4EpicnsM0CXX0Dmya/fPL2X/OS8dsNNI1tT35TYiL2LKd++A9RdhhAMgwDXBe/ouC6LqJY
      7FIzMnKXnp7ePQ1MLc/OkMpBT18T//J/++fsc6+TlxxsSyTY7OdMZ5jPJ1Ncn25g6NSrNPe1
      c+tagmCLjz/+gzd3ff/HVgBgTQiSyWTJJappGqqqIklSSZ0xTZN0Ol1z8tb6vHyS7lQAaqFS
      AOZmprA++j8Z0LJVj60F3RL4L/MthFQ/tuMQP/Ia5157HUnafoL41wHXcXApxhU++d3vOLD8
      7ymYFiHNBxQbKTquy7/9UmDgmR9y7twr5LI6/kAAxb/7cjiPjRFcDV6QzO/3o+s6ALquIwgC
      wWCwJATe7x5Zrl5URn/31lBdf72Wtg6+iD9Nt/4BfnEjdbravV0XrqRjyIEgwUMvc+bMGRob
      62ss+KhAEMW1nmKugSyLqIqnkq/yvQSBzhg8GB9HFCXCkb2LDn8tOcEPE67rYhhGaaX2bAZV
      VTdknnnHb3U9799erf7V7i0IAn3Hn2e00LRpFQkPtgufLEe5bTTR9/T3eP311x+7yQ/g2BYz
      M9MsJTIkJ64wv5TBKss4SqR1LNuhU82RSKQwbQcjmyajFza5av14bAXAm5DVJqbjOOt4Q54Q
      hMNhotEoiqKsM24fFTS3tKE99w8Yy27u89YtgWuJAFfzHbz64/+W51548aEFih42pu7f5pNL
      o/zVv/wl7390mX/7YYKr94o0ECOX5efvXmcyZ2HpWSavfcZyMs2H/+Xn/ObC/T25/+P51IBc
      LkcikSjp/+UTwHEc8vn8BsHw3KWhUGhD8GYzPGyCXTmaW9tZ6HyDqXztsu+y6LJII4OHj3Fg
      ePeekK8TYU1l+cEE0eY4w0eP4aohEoUCruvw24vzHOoIkzMFBtqDDHQI3P7wV/i0dnJGfk8K
      LD+2AqAoSsnfD6wLgkHRFqhl+Hpu1HoFYC/5RFtdWxRFTrzwBne001WPd1x4kPUxtZzjmWee
      faR2sJ0gnUsR6+kiapm0Dg1zKJShWVOYeJCgtz1COmuQ0U1ujC7x2slGZmceEIm4JFaW90QA
      HlsjWJIkgsFgKSBWja5sGAa6rqOq6gaXpvdZeaS4lo6/F4WpaqHWtYNNnWSmBEK+9QawYQt8
      sRzEbhykvaNjz8fzVaOr/yivRJfxPx9CxOTd0Y/Z3zjLSFrmSI/GcE8MJBGrpQO/T2IqZzB8
      8kUO+7U9Wb0f2x3A46FEIhHC4XBpRffyhaE4uXRdL8UBys+VJIlAIICmaevOqYVqxab2CtWu
      3dzZx3QhuGFcquxyoskmGNq6FMnjAEGUaGxqJhxSCYYi9D/1Fu89CHKgpRhtlmQJSRBQfBIC
      MBxd5u7tmyi+vakM8dgKgAdBEPD7/YRCIUKhEMFgcN2E9nKFqwmBR7P2aBRbGZLlHqF6xrUd
      w7Ty2m0dXSw0P0ve2iiYIbFANpOq+9qPEw6fOove8BT3l13MKo1PArJLITmzZ/d77AUA1nYD
      VVXRNG0dRdpLn8xms1XzigVBQNO00k6w1W5QrxDsRF2q5CG1HzjN1XSIXIUQROQCx4b6tn39
      xwGSJPHCiy9zK9NWtXiB7QoI/vriAJtF/z18IwSgEoqiEIvFUFW1NBEty1rHHapEpRG9W+yG
      UOe9uPaOTnp++D9zJf4mnyRbyFkCBRtUycWe/PKhGudfJ/r6+jhw6kUyhrBhwbEdkNX6BKAu
      7tauRvqIwuOih0IhHMcpJcaYpkkt4p+XZO/xXnY7ucqrUntj8j4v/7/a2MuFJxKJcvzF71Mw
      XuPapU8xUotI6UmyK3OM3L3L4NDQrsb5qKJ3/yHu3G+jT5hZ11ywYAt12z/fWgHw4NkHXhaZ
      FxyrRi3wahBZllWauFsR6OoxnCuPqRSEyr/VuqYSCHD82XNA0bu1tDhPT2/vpvd/nBGLN3Lg
      u3/BR+/8kpP2l8RXwyLjuQZO9+zd9/5GqkAeKidToVCoSo/2BCUSiRAMBpFlGVEUN9CIt4tq
      tsJm9kO5cFaOvfwcRVHo7dtXczf7JkAQBCLRKE89/zrT2SL71HFdpLaTe8pG/UbvALCR6pzL
      5UqJM5XwvEJ+v59cLoeu6xtKM1Zeu1736WYrf7XxVie/uSWjPRAIPPZBsK0giiLxhkbezbSR
      L0yjm2C01M7v2Ekq6zdeACph2za5XI5wuLoh5cUIPIq4ruuIolhzNffO2Qo7YaFWXtsTAJ/P
      99hyf7YLVVV57Qc/xXFB04IoSu1dz3VdstksgUCg7n5h33gB8Fb78ppCXuR4swckiiLBYLBU
      XsU7txLVvD174Z2pZiyXG8jfdLiuSzqVYmp6moMHD9Z9TqFQKNHk68E3ehnxVstoNIqmaaUJ
      VM4k3er8SCRSUpfqWVHKo9F7raI8igzWh4W8rjM3N8eBAwfqPsdzcW9nkXisM8LqhTfpDcMg
      s1ppzPvOgdWexZuda1kWqVQK0zQ3jSOU/+9hJzkEtVQrT7Di8XjdK9y3Cd67cl235MjYCt/o
      HcBDOe0hGo0iSRKZTKb0b7MVo5xztNmkq1RZKneCWi+j1t82U7e+Lfr/duG9K6DUN2IrfKue
      pKcSRSKRdV0qt6ogVy4EtSZfecTSW4lGRkYQBIFsNsvU1BSwcfJ6Rrl3HyjGJKrp+98W/X83
      8FzalUWTa+FbJQBQfUXPZDJblk8pjy7XIwSmaZJIJErFu3RdZ2VlhYmJCUzTZHFxkVSqSGhz
      HIeVlRUmJycxDIP79++zsLDwrTJ69xr12knfOgHwIElSKUe4XupDuQ++HjWkvb2d2dnZElV7
      fn4en8/H4uIijuOUstl0XSeTydDb28vCwgL9/f3k8/m6aNrfFHiOCa/Sh23bpd+9f9th49aL
      b7Ul5ff70TRte1umKBKNRhEEAV3XNxi55ZFcVVVZWFigt7e3FIDTNA2fz8fCwkIpvuD9v7S0
      hKZpzM3N1WSuflPgTWIvf9vr/+ARFittKc+1KcsykiTV7effCt8KL1At7CbTy3Ec0ul0qU5p
      +apUmZQjyzK2XSyCm8/n11WwK3fNFgoFVFUtCUvltcptmMfdEDZNE9M0MQyjpH56O2W5HeWh
      vDSNF6MpL26wU3yrd4DdPDxBEAiFQpimWXK9eajcostfpFfluNp27vf7sW27aiVkT1h2y096
      FOAtHt5zEYRiF6Byeod3TGVTFE9VymQypWdV/h63qzZ+qwVgN/BWIlVVyWaz6yZzrZ3FU3fK
      f68Fb7XzzimfGI87vPZWnjrj8/lKGXnlmXy1qOnes9Z1vcT09VJcgdJ168ETAdgFyv3OldiK
      mFXJ8al1fvnWD/X7tx9VePkZiqKsS18tt3k8V6Ysy+tsBcuyyOfzpWfg7Qbe373eEZXX3gxP
      BGCXKNfPN/PbVzNiawlB+U5Sbkt49yivhP0ooV6byktZLT/ONE0KhQKhUKgUB/FWcdd1SzuF
      oiglQah0XXv399rkeuUxNxvPEwHYJSRJQtM0MplMTb99+eStxvffikRXKRD5fL5kMD5sVI7J
      c096to/nofHUFUVRNo2Y1zLevYYmW+2WXv8Hv9+/zo7K5XLrApqemqVpWql5SjU8EYBdYie+
      +p3SqL3jvcSeh70LeLuN56Ys98+XH1OZ87ATnpLn4qz3WVaybxVFWdc/DtYqgngqlydg5cLw
      RAD2AOWplpXYzguFjUk2tX43DOMrEYBUKrXBy1WJvTDMd+PW9dzDiqJsaInlCbFXGcQLZnrC
      8EQAdgnXddcV4oWd05ZrHV8tJ8AwjJKh97Cg6/q6qntbjc3n8+Hz+bbMtXgYEIRiCXy/31/a
      qSqrgHg/53K5khfqiQDsEpvlGe8E9RrVruuSTqdLRuNeozxxqB7qgZdF93UF6DyjWRRFlNXO
      Nl6PuEqVzQvCwRMVaFfwttdqVajrOXerc6oZx+U/ezpvtV7Ju8V2S8Ooqlri4H+dlI3yeEk9
      bXKfCMAu4fmra6VZ1noBlSt8uWFc6SEq9yCVH+u6Lvl8vuSJ2ishKDd+64EoiqXU00eFouF5
      hMrb53rP0FNZn6hAu4QXCAsGgySTyZrHbRboKof3kurdDbzfC4XCpq6+7aLczbkVyoNWj8rk
      h+KOVE/5lCcCsEt4q5+maaXElp2iPF6wneix5+XYC4akF131dOStVIjKKO6jgnrZs08EYA/g
      qSCSJFWNUELtOj/VUM3w9F5oLbvAY5nuRTEvwzA2VNPeDI8zTfuJAOwRPCEIBAKYplkialUj
      yG2W6VUrWryVa9G7Z2UzkM3OqTYGXdfJ5XJ1req7CXw9Knh8R/6IwZsMXqje5/ORTCarBmZ2
      umJuda7n3/Z2glpeGU/N8QxdL5AEbBn08uDRHrxzHwX9v5wcV82RUA1PBOAhQRRFQqFQKSBT
      Pqkcx6n5guoNOlV+7p3vkco849TzzZfr9p4npFzN8bhF9bgObdtmdnaWffv2oarqIyMAtm2X
      VFDvmfp8PmRZrsmdeiIADwnew49Go6XAi2esQm3251aoRwi83w3DWMevr1Rryq+1VVEA7/hC
      ocDy8jJtbW34fD50Xa87nfRhwwuGlXcINQyjlLfhFUcrxxMBeIjwhMCjB5Qnd3vsxVrVzLbK
      J6g8znXdqm7UchVsK/vDu878/HxVCoRHimtqaiqtqA0NDY+MEex55ERRXEeM26z5yRMBeMgo
      pzaUt23ydPRcLlcz6lqPENRSraq5TOu1P2zbpqNKB0qvsl4kUmxQsVeJ6XsFbweQJKlqWmk1
      PBGArwHei/ISNrz+ZVu1aS0/v9Zx3k5Q+Zl33laszkQiUVMl2w414nHBEwH4muCpI16HSs/3
      7pUHKUetuACwLsRffnzleZvFIbz/c7kcy8vL9Pb21jTMH6UVfy/wRAC+Zni7QSAQQFEUHMdZ
      F0OoZtxWTsjKiVqLk7RVME7TNDo6Opifny/1X/buAZQywL5JeCIAjwDK818dxyEUCqFp2rps
      rHKjtJoQVFNP6qUDlCMQCNDe3s7k5CQ+n28dn8ayrNI4fT7fN6JEyzdLnL8B8HqTybKMoiio
      qkooFCqVY6zm0aic/KIoomka0Wi0FBmuxS0q3z3K/3V2drKwsLDu+PIgm6qq3wgBeLIDPKIo
      n5xeJTRVVdfxdKqlYnrGtefzVhSFUCiEruvoul615CLA3NzchkpsoVBo3bFe8CwWi5VKlmzl
      Ui037CvzcR8Fe+JbXRrxcUP5Cu1Fdb3qBx41u1Zk1suEymQypfo53uT1KrBFo9FN7+8lmTc3
      NyNJEoZhEAgEcBxnXS8ETzirpYp6NBEvf2Enatpe4okAPKaotfpuNqG8RBevUoIXmJuamqK7
      u3vT+5Vf17IsZmZmaG5u3pJzX8to99Q6b1f4uoTgiQr0mGInK6e3S3iqjZczW6tjZuW5UNwt
      EokE7e3t62yAzVy15fCO8Wp7esk0X1dQ7YkR/C2DR88Ih8Mlslw9zUGgOPlzuRzd3d1IklRS
      xTZL+yyf1JWFblOpFHfv3uX27dtfW1KN7OmDT/Dtg9c+NhQKbXClVosjSJJEOByuGXgrR/n1
      vKyx5eVlQqEQruuWeivE43EikQiGYWwobPVV4L8ComoCqPVpEbgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Region w.r.t measure values' width='192'>
      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
      bYmaE+e/0sXAtu28zhL7dVTYmtWkvv3tXl9h1Ab2HvVBFgOgKlvXD7jcKom0ie5yoSoqFgqq
      qqCiYttJ1jdSNOlbw5qmiWVZKIqS3xeYuVfPgK3dt1f/8sU29xjbLpD6rD0CYNl5rw32fwPJ
      WgAiS7PML6+TMRXOnKzm9qe38PgCnCjTuPv72xQHa/CkdS5eu8T9/jFqrr+PpmmoqrrdGiVf
      7H3Gdrlcea/P0ly7r1AKoz5D3f1QUnXl/3cLYCgHaIvypoI1zVyrakBRVFRV4bvVjaguF6qi
      UHvcQNe/GOrj6+9na1ghDiSr0XS5vnin+nLqv/ziF6KQyOcAwtEkAMLRJADC0SQAwtEkAMLR
      JADC0SQAwtEkAMLRJADC0SQAwtEkAMLRJADC0SQAwtEkAMLRJADC0SQAwtEkAMLRshaATCrO
      QG8Pw2OPyWSS9N69zcSLeeLry/zxzm3mljeYn5nHtC2mpqayNawQB5K1axVN0+LM+W4mHtxn
      4sEG9effY2qwl2TIw7kr7zHSM4BH1diMLZFyH8vWsEIcSNYC4PF66b97l0DdSaxIiMqAhwWX
      G0P1UOTR0VUd04wxOh7i5g86sW0bwzAwP29Jkk6ns1XK28tk9lxlGAaGYaAoSg4L+ip7j/ps
      e6u+TCazb+uPw2ZZu/dcME0T0zTz+7tl/86EWQvA4tQEoaRKmZ2ivFynt2+YVCZDS4nCyMhD
      0pqGj2JufucsA4PD3Lx+BV3Xt9tm5PNL+GxLJ7XHOk3T8l6fpevs9hJSlK36dF1H1/Wc1/WK
      pbp2bTvyqmVLvr9g0VJz0BalqqGda6V1KKqL0tIWOgNhPP5SfG6FlXCE0opKMA3cXg/XugPZ
      GlaIA8laADS3l4oK7/b9iurq7dvVNZ/v8+tbbVPk+4ZFoZDToMLRJADC0SQAwtEkAMLRJADC
      0SQAwtEkAMLRJADC0SQAwtEkAMLRJADC0SQAwtEkAMLRJADC0SQAwtEkAMLRDi0Atm1vX6ea
      z+tVhdhP1q4Iy6QSjA0NUH/+GuVKlD/2DBOorKOlysPDiSlqmk+hpeI0tTcy8fgFnZ2nszW0
      +Jr7dPA5D54s7Fj+7cutdJ2oPdC2sxYARXXRVBdkI2kSm37OuQ9u8KSnh5mkh6vXrzN0rx/N
      hvWNJYJNHV+ZFb48W+TD68Yu5PoKY5bdfexXz9tBa5ucW+Xu2MyO5R0tVVxsr3mD6vYeP3vX
      BOtu/MVeNoC0CV7dhaqomKhoqoqKim0lWFpO0nDKA2y1zXjVssIwjGyV8tZsc6+eAV+09ijE
      +mx7q+VHPmsDsKzdX2CWZWWlPnuf7b/JtvcLYNYCsLmxwsjoBGvaOlfayvjDb2+he4o4UaJw
      5w+38ZVU4U65+Oa1bu71jXDzxjU0TUNV1e3WHvlim9qebVFetW05SH22bZNI7fxFKQr4PK/f
      rqXtXp+iZKe+gzL3aDvyqi3KQWtT1N0PVd9026aSg7YoRSUVXPvWD7bvf7e6GdXlQlUV6lsz
      6O4vCr1541q2hj0S1mJJ/vof/3vH8mDAy7/+3U/yUJF4JWsB2LFh/YtNf/nFL0Qhkc8BhKNJ
      AISjSQCEo0kAhKNJAISjSQCEo0kAhKNJAISjHdoHYeLouD0yTf/juR3Lb1xo5srp+jxUlDtf
      iwDYtk0yvdvf2ih43V+Lh3ioXixEuD3ycsfy47VBCcBRkEgb/NU//NeO5UUenU9+8Rd5qEgc
      FXIMIBxNAiAc7dADYFsW8Xgc07IxTRMbtr8bWIh8O+RjAJvJh4MsxkxQfXgySU6ea2H0szk+
      vNZ9uEML8QYOdwawIZ7UeP/aVbR0CsOI8emnfZzvOneowwrxpg53BlBAUzIkUgYZ28Dj8nOh
      s5zp2SXOtzcc6tBHiWFZzKxFdix3qSpNZcE8VHS0DMzO8Gxlecfyyw2NtFdU7ft//x9On8E+
      +4mjEgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Segment w.r.t measure values' width='192'>
      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
      CFvzL1nezT1MXrwiAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Ship mode w.r.t measure values' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sub-category' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Subcategory by measure value' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29d3Ak2X3n+XmZWd4XgIJrAA2ggfbejR+SY8iRSEmUZkeUSImS9lY8bUgX
      Cu1eaP/Yu9u408au4i4uYlenvVv5XYqkRIkSORxxhpzp8abNtPcGaHhXQKG8zcx3f1TPtO8u
      AGW78YkgYxpVlfnLqvfNfO/3fkZIKSWrrPKQotTagFVWqSWrAljloWZVAKs81KwKYJWHmlUB
      rPJQsyqAVR5qVgWwykONVmsDao2UElkw0BNpMuNz5GYXyc1H0eNpjGwemS8gVBXFZkF12rE2
      ebGF/Ng7W7CF/Cg2C0JZvY80Kg+tAEzdIDM+R+zEFdLDU2RnImAubU9Q87pwdLXg274O9+Aa
      VLcDIUSFLF6lEoiHaSdYSomZKxA/NcTCe6fIzUWRulGWY2seB95t/TQ9uQ1rkw+hrAqhEXho
      BGAWdGLHLxM+cIz8fKxi5xEWDf/uQVqe2YUl4Fl9ItQ5D7wApJRkpxeY+cEHpIamoEqXq3ld
      tDy7m+AjGxGqWpVzrrJ0HmgBSMNg8dB5Zl75CDNXqIkNni29dHz5SSx+d03Ov8q9eWAFYBZ0
      pn/wPouHzi95cVturCE/3b/yPLb2ptUpUZ3xQApAT2WZ/O5bJM5crbUpn6K6HXR99Vncg121
      NmWVG3jgHNhmQWfybw7U1eAHMJIZxr/5E9IjM7U2ZZUbeKAEYBZ0pv7ubRLnRmttyh0x0jnG
      /ttrZCbDtTZllWs8UAJYePcU0WOXam3GPdHjaSa+cwAjk6+1KavwAAkgeXmCuZ8chgZY0eSm
      I0x//72ybcKtsnweCAHoqSzTP3gfqZu1NqVkoscuEz87UmszHnoeCAEsvHeS3HSk1mYsDdNk
      5ocfYmRXp0K1pOEFUFhMsvDOqVqbsSwKiwkW3mtM2x8UGloAUkrm3z2Jma/NLm85WDx0jkI8
      VWszHloaWgCFaJJYnXt97kdhMUns+GUewP3IhqBhBSClJHFuFD2ZqbUpKyb68cWah2s8rDSs
      AACiRy/W2oSykJ1aIDu1UGszHkoaVgB6PE1mbK7WZpSN+Nn6Ct14WGhYAaSuTFYttr8apK5M
      1tqEh5LGFcDwVK1NKCtGOltrEx5KGlIAUkpy0w/YnFmy6gmqAQ0pADOXp5BofO/PjZgFHXN1
      V7jqNKQAjFSuvIOlDr4FM5dHT61Og6pNQ9YFMnUDaZQnktK1fQM2j0p+JoypqqQvTdckolTq
      5mp0aA1oSAFIXUca5Yn81LwuCvMzZObStL/0JDavA9PixeKyUpiextLXhTE7gy4c2Js9JI9e
      wrN/I4rNRuzNo7h3D4A0WXjjGOYKxq80TWRBL8s1rVI6dfDwry2xD09imFaCOztIj0wSPTGJ
      Kgzm3zmFCAQwFyMsHhpBtWqYBRNrdye5yxdJXg1jbQmhqgKJRLWt8KtcXQDXhIYUgNBUhFoe
      0737t2ALuCikMuhp8KxvRjeh6bFBzMUo+YUEoKDarSBBn5zC0tOPd9Ma8uEwhm5gJDKY+soG
      sFBVhLZaP6jaNOQUSNG0sgkg/uEJUMS1WJxxUBUwJhFWFZm/PqdZOHC0eJdWbFj60ggjRzYc
      JfP68eIbVhjLI1QFYWnIn6OhachvXHXYUGxWjHSuPAe8cfBeW1vcOPhv/DtmlugHZ69PWcoU
      xKbYLGhOW1mOtUrpNOQUSHFY0TyO2hlgmGWP3lSsFhTHqgCqTUMKQAiBrTVYazPKi2C1alwN
      aEgBALj6O2ptQllRV+/+NaGBBdBZaxPKirOvvdYmPJQ0rAAsATf2NS21NqNseDf31tqEh5KG
      FQCAf9dArU0oC9aQH0fXgyPmRqJhBSCEwLulD9Vlr7UpKyawZwOsNtqrCQ39rVuCHrxb+2pt
      xorQPE58uwZWPUA1oqEFIISg5XM7EZbGDSEI7N+INeCptRkPLQ0tAABrk4/go5trbcay0DxO
      mp7aXmszHmqqHgphGgbZbJZMKkk6lSSVSJDNpMnnc5iGgWlKFEVBVVUsVhsOpxOn24PL7cbh
      cmGzO1BumS+3fG4XifOj5MOV6/5YdoSg9YuPoj0Aa5hGpioCMA2DyHyYhblZopF50skUur70
      coaaxYLL7SHQ1Eww1EqwqRmhKGgeJ21ffIyx//ZawxSY8m7txbe9v9ZmPPRUrEeYNE2SiTjT
      42PMTE2Qy5Q/h9fhctHW0UV7VzdOl4u51w4TPnCs7OcpN9ZmH32/8/No7mvxTFKCkYN8EjIR
      yKeK/zYKoFpAtYHVDY4AaA6wOEA0/Oy1Lii7AKSUxBYjjA1fITwzjVmm1MV7oWkaofZO1nSt
      JfrKkbrrD3YjqstO96+/gKu3HXIJWLgE0RFITBYHv7xHpptQikJwhsDfDcEB8LSvimEFlE0A
      UkoyqRRDF84xNz2JaVa/WYWiqoSaWtEOjmJM1F+/AMVmoetrz+Buk4jJwxC9CvoKEuGFCq4W
      aN8FoS1gccGqO3VJlEUAhmEwMTLM1UsXKeTLFKO/AiwouIbi2KdSiDpZEqgOK53PdeH1TkJ0
      lLJn3tt80LkXOvYWp0irlMSKBCClJJfNcu7EURbmZstp18qREns4h3cogVqoZeskic0r6Nxn
      4HBEELLCU0JnM/Q/B8FBUOprf0RKiSkNdKljShNTmhRvBAIhBIpQ0YSGKtSqbQwuWwBSSiLh
      Oc6fPE4mXb8NHrSUju9SHGuiBk00BPi7CrRtjKNZqnh+oUDHbuh9tqZPAyklaT3JXGaa2cw0
      kfw8sdwiKT1BzsiimzoSE4FAVTSsig2X5sZr9ROwNdNib6XV0YHPGqiYIJYlACklc9NTnD3+
      MYZe/6U8lIJJ4EoSa7h61eQUm0bb5gyBtghCqdE8zLsGNr0I9kDV1gamNEkUYlyKnmMocYGF
      bJickUEuc8pnU+z4rAF6PP1s9G8jYGtGU8rnvV+yAKSUTIxc5dKZU5grKYRTZRSh0Ja2ol6a
      R49V7oklNBXPhg5a+xewGcMVO0/JOJpg80tFb1EF0c0Cw/FLnFk8xljyKoYs/41RIGhzdLI5
      uINB3xYcmnPlx1yKAKSUzEyOc/b4UWQNvDwrRVU1Nm3YijoeI/L+aQqxVNnq8QiLhnfzWpqe
      3IIj+SEiXEfN7+x+2PYrxfVBmZ8EhqlzKXaWY/MHmc1MLftOv1R81gA7m/azObATm2pf9hSp
      ZAFIKZmfneH00cMNMe25Gxarle17H8Xn85O6Mkn02CUyY3PkI/El7yKrLju21gC+bf14t/ah
      eR2IoZ/AxEcVsn4FOFtg29eKm2llQErJZHqM92feYDI1WpZjLgefNcBT7c/T792AKpa+6C9Z
      AKlEgiPvv1MXbs6VYnc42ffUZ7DZHUXPRCZPfiFGenyO3Owi+XCUQjyNmctj5goITUW1WVCc
      dmxNXqyhAI6OJuwdzWgeZ7FGkZQwcxwuvnzvzaxaEuiHbV+FFcyhpZTkzTwfzb7FqcgRCmbt
      O3QqQqHXM8gznV/ErXmW9DQoSQCFQp7jH31AbLH+NpeWS3OojW1796NqZVpQJWfg2J8XQxjq
      mZ6nofezy9w9loQzs7w28Y/MZabLbtpKcVu8PNv5Rfo860sWwX2/BSklVy9eeKAGP8D83Axj
      V4fKczCjAFd+XP+DH4rTs8TSB6+UksuxC/z91f9el4MfIFmI88ro33Ek/D6yxKfwfQUQiyyU
      b6DUGcMXzpFKJlZ+oNmTsNgg35GRhyuvspRS1qY0ORX5mFfGvktaT1bQuJWjywLvz7zBW1Ov
      ljQ9u6cATMPg8rkzDenxKQXTNLl87szK4paMAoy+Wz6jqkFsDCKXS3qrlJJj8wd5a+pHmJXe
      xS4TEsnxhUO8OfkKhnlvh809BTA9MUY08oD14rqF+Zlp5mdnln+AmROQjZbPoGox9n5RvPdA
      SsnpyFHenf4JRoMM/hs5s3ict6dfu6cI7ioAXdcZf0CnPjcipWR06PLyGtQZBZg+Wn6jqkF8
      ohiCfVckQ/ELvD39GpLGnQGcXDjCkfD73C348K4CmJ+ZJhFroBTDFRBdmGdxPrz0Dyamit6f
      RkSaMHPyri/PZ8O8PvkyBbOxG/dJJAfn3uFy7Pwdb3J3FICU8oFd+N6N8atDS3sKSAnhc/Xr
      8y+F8Lk7LobzRo7XJ14mrddvkONSMKTBW1OvEs3f7sm8owCS8RiJaAPOa1fA4sL80qNaG8Xz
      czf0zG3TICklh+beZSo9ViOjKkOiEOPA5Cu3LeTvKIDZqcmGCnQrB4V8nvnZJeQ05JOQWsa0
      qd5YvDl9dC4zzYmFwzUyprKMJYc5Hz19099uE4Bh6CzMNei8doWEZ6ZKd/kmp6hJP9Vyk5j6
      9D9NafLuzE/Imw2wobcMJJKPZt8iWbi+93ObAHLZLMlEGTaHGpDYYgS91CT+1HxljakWmcin
      64Dh+EXGk/VbUKAcxPKLnLzhCXebAOKLi1Wp5FCPGLpOIrpY2pszD0hoiJ4BPYNu6hybP1i1
      cOZacnLhCFm9mBx1mwAe9I2v+1Hy9esrzy5Lx+McujjNxak4pqnf0ds+V8HkHQBMHYwCE6kR
      JmoY1lxNMkaak5EjwB0EUJbYmAam5OvXVz5PHj47CW4nB09OkTEMcqk0H5y8yutnpikUdN78
      +ApvnZkkm8nyw9cvMpvIMxuJc/rMFBeHp/nx8QnyK62EZxogDc5EjjX0htdSuRA9Td7I3SwA
      KSXph1wA6WSitP2AcmSSiQIfnhnjymwaIQsk5ucI48evZDl2cpTWnjV0Nzt5/+RVgj1eDpwa
      5gc/OQEeN2dOjdHud5ZhHS7JFJIMJy6u/HoaiIXsHDOZyZsFoBcK5PONvfO3UnK5HEYpayDN
      uuJzSdPGS5/dzE6fhcWCCVLQ0e7A4bQhDZOQ14KUEkUBm6qxp6+dnv42tnZ7ePzR9YxMzjEW
      WeHvJVSuJK/URWJLNZFILkTP3CyAQj5fthzZUtDrMLXSNAz0QgmDQV15V8euwSDvH7mEa6CZ
      docDT1MTfR4LnU1+tm7q4OOPh7DaHDy6uYupuRiZrGTL2lZAMjQXw2F30RVcmRClojKcbPAN
      vWUyHL94c0ZYPBbl8DtvLi8wrCQkJw++SySnYA114DHjbNu8s0LnWh6axcL+pz6H0+2+9xuv
      vgkjb1fFpkqStbr4ll8hajycU9+b8gGrEfevmHZ27t3C4QPniFpnmJ2apWP9NiYvnSITy7Hj
      sf2cOnICoRls376D05eHsAgPrS6YiyfYtX8fwQrW1JdSlpZN5HwwmtrFFUnMqO8kl0pyS0Js
      5Ysn5bNRhobH2Ly3j+kZ2LlhkKvz87js63j2URcfXU7SvXEdvX6N46fGcDkcqGYGb3M7UwuL
      6PkCVFAA4ob/vyeuUMVsqCZRi/ZQ+P7vxk1rAEVVqLQIfM1r2LJpI51tTdhtdoRQsVh9qNlL
      vHfoBD3tXuwWC4pqoXewHSOTwu4NIgspvB4bqUrX+RQCUUrHRldLsVR5gzNtrXqToLripqvX
      NAtCVHIdLFi37Xo/ry0btwLQE3LT/cwXME1Q1euDzx2ENZ3dn2b4d/fJm16vBIqioGml1JcR
      4OuB8NmK2lNZFBYdngdnV3sZ3DSarDZbaXe/CiCEcsfBrSgKQhSrB1d68EOxepxmsdz/jQII
      NWZzvk8J9hE1q1cvtR65aUSpqord8XDXlrc7nSgllRUX4O8t1uVvVFq3kzHSVTlVdGKe8x8O
      EZ1Lk03f7mZOjkco6NVfi9x2S3W5H+6etUu6fouzcZ8CjgAE16FXIeWxkEozdHKRro2t6PEU
      IweHuXhoglwsyekDFwmHMwhNoZBIMXNpjrmri5z/8BKTV6MVX57fJgC3t4HvaGXA7fWW/mYh
      YM2joJQwZao32veA1XWtSUVlMfJ5fC1NuANurJrE19OCJZIimzex2lUuHJwiG0uRnQ9z8Xgc
      tyNHdLGA3VH5BfptAvA3NVf8pPVMYKnXb/cVe3Q1ElYPdOwBinU1K41mtRKdnicdS1MwNZw+
      B4pNcPn0DL4OD6q8ZoNU6H16DbZgE/0bmhl+e6ziXW9vk5jb48Vqs5HPPZhZQffC7nDicC3D
      tdnzZLHbY7bEXIKaIqDveucYTbGSr/A0SHM56N/pZ+L0FG2b1uBwWdC2tNNMnpmJJGt3NOMJ
      aICJ3WJBSJ1YOMPaJzpQKrw1dZsArFYrHp+//np+VQF/U/NtXehLwuopFpw9/4/UfZpk07pi
      R8lrOFRnFcodCgLdIQLd1zcPLaHiWmtdqOmmdxYjm1QGHllbYZuK3PZrC0WhtWNNVU5eXwja
      Otcsr9GCENC6vf6nQjYvDH6p2Hz7Gj6rv4YG1Z473u6aW9tK84U/QDicTvzBpvu/8W6Ia1ML
      b53ePBRLcfDbbx7wAdsKrvkB4I4CsNnttLR1VNuWmhLq6MRiXWGMv9UFW36x/gLlFA3Wfwma
      Bm97KWirM1urzF39TF29fcxMjj+wlaFvRFEUunr77vjafCzNhdF5JufjTM0nSWbyZPMFQGC3
      aXgcVjqaPXQ2e9m0tpmAx1cUwenvQKYO8quFCv2fL07R7jC9a7a3IhAPbUDcXQXg9fkJtbUz
      O3WvAqoPBh3da7E7ih0HC7rB2GyMD86Mc/DcBJPh0uPkhYA1LV4e29LFo/0/R9f8a2jJGn5/
      mr1452/ZctfmeAFbE16rn1i+ETxY5eeeLZKikQWOfvDuyurn1zmaxcLeJ57G6fZyamiWf3zv
      POdG5snrKysNY7OobO1y83NrJtlsG0ep9h3W0QQbfrYYsHePhb2Ukh+Mfoeh+IUqGlcfuDTP
      vQUgpeTyudOMXimtmULDIQQdvYOo3ja+c+A0J4dmyx4JKwTsbc3yYs8MXa48TrWSaaCiuDEX
      6L/m63eW1Bb1bOQEr038QwXtqk92NO27f5M80zA4eeTgyppI1Cm6zc8bQwZXJqsTDryp2eS3
      dybpFFNlrypt2ptYbN5H3L+JpK5RMEwMCRZFYLcoeGwqfoeGy3p7oJ8hDf7i4n8inn94CiJb
      FRu/vO43S+sSmUml+PjDd8mmqxM5WGmklIzEBG9dNUjnqzu987ut/O4X1rLDOY6IXIHc8now
      SEBX7IQtXQxZNjCtdpKT6l1DBwSgCPDZNboDNtYG7XhsKsq1J8QHMwc4OPfO8i6qAen1DPBz
      a79aep/g+dlpThw++EB4hS7Nm7x51UCv0aU4bRZ+95/tZ99AEBEdhegIxEYhOQv3akUkVLD7
      MdztjMoOzubbicjlZaVpiqDLb2Nbuwu/Q2Mxt8C3r/wJWeNhyA8QfHntL9PnXb+0TvEjVy4x
      dP5sBatGVBYpJVcXJa8PGVQ6s/J+uOwW/vVXHmPXYHsxBU8axWpz2Wix9LqRA0MHVSuWYLG6
      kXY/i3nB4Yksc8lCWZbVFlWwIeRka5uTd2d+9MCWRr+RNkcnv7TuX6AIpXQBQLGr4pXzZxm9
      cqmS9lWMcEry/fM6uTqp/etxWvnD//FZOpvvH4ItpWRoIcvHEwlyFUgcafNY2NBW4OXxP614
      cFwtEQi+2P0Sg/5iHseSIr8URWHdhk109vRWxLhKkilI3hw26mbwAyTSef7oe4dJZu494Ewp
      OTOT5qPReEUGP8BMosDRMZW1rr0VOX690OsZoM+7/tN/Lzn0UVFVNmzdztqB9fd/c70gBCfn
      NcLp+pu6nR+d5/vvXbjrtFJKybnZNMcnkxWPjU/kDJKxzThFe2VPVCOsipUn259DU67v/y4r
      G0JRVdZt2MTApi0oain5s7VD1TQsTT2cnKrfx/rLH1xkIhy/7e8SGIvmOD6ZrNo2Wl63YC88
      jSIrV3upVuxteYIm+831nJadDiQUhZ51g+zc/xgOp2vFxlUCt9fHzkee4J1LCQq1cvmUQK5g
      8DcHztz290RW59BYouJ3/ltRzCY85lNUo1BatejzrGd3y+OIW65pRflwQgiCLSF2P/4krR2d
      y4ulrwBCKHR097Dr0SeYTpicuTpXa5Puy9XpKIZxXaSmKTk+mSRTI3eVxejDLQZqcu5y47X4
      eabzp7HcIXe7LAmhDqeLrXv2s23vI0tLKq8AXn+AXY8+zqYdu7HYbPzkyBD5Or77f0I4mubK
      1PWAtJlkntHFWqalqgTkUwStbTW0YeU4NRdf7HkJ710Sf8qWES2EINTewZ7Hn2b9lu2fRldW
      C6fbzaYdu9n92JMEW0IIIUikcxy7PF1VO5ZLXjc4eHbiWnFeydmZdM0DlDN5Gzv9P4PX0phZ
      YxbFyufXfJk2R+dd31P2kgAWq5Xu/nU89szzbNqxC3+wqWILZVXTCDS3sHXPPh797HN09qy9
      KZPt7NUwsWTjJPcfOj+BbphEMzqzifpYtIfjLr7c+1WCtsaqFmJXHfx094v0eQfvOTWvWOEV
      VVXp7OmlvauHZDzO3PQkC3OzxGPRFRUfFULgDQRpDrUS6ujE6XLfNZH99HD9z/1vZGo+QSSe
      YTYLRq1v/9cIpwrYRTM/t/ar/HD0bwln6z8o0qm5+enuF+ly3X+/quKVhxRFwev34/H56N+w
      iUI+TzSyQDy6SDqVJJ1MUijkMQ0DwzDIpNOk02nS6QwFXUdKic1mwx8MsrZ/HWv71uHxFYt3
      3UvZUkrONsDi90akhDNXwxTc9VOcrGBI5pJ5eoNBXuz7OgcmX+FS7Bz1Wv2i1dHBC10/T9DW
      UpJTpmq1sT8xxmqzEWrvINRezDmWUpJKJjh2+DDnzx5nPhwmd5eaRIcPHsIfCNDbv44du3fT
      N3D3x1smpxOJN15g19BMFP+a+iq7Hk4V6Gty4NRcvND1C7Q6Ovho9m10WV99xbYF9/BE27M4
      tNLXnzUtDp/LZjn04Qd88M7bJOK3bwTdimmaRBYWiCwscOzIYXp6e3nmCy/Q27/utmlQOJpa
      cVZXLRiZjbO+tb68VrGsgZQSIQSaorG35Ql63P28NfUqU+mxmucTN9laeLztGfq9G5Zc6a4m
      tdCllExNTPCX//X/5bUfvlzS4L/TMUaGh/mrP/mvvPbDl8llsze9ns4VMEreQRLsGGgp25fh
      8rjwO5e38L/foj05c5m5+bsXsspHw6TzOSJj4bINy1zB5IYtCoQQtDo7+IW+X+HZzi/i1mrj
      +rYpdva2PMEv9v9zBnybllXmsepPACklF86d5e++9ddkMyufohi6zvtvv8XE+Bi/9Ku/hufa
      PkSuYGCWKIBgeyuf2xIiFl6k4PSzfY2L987MsGfTGmamwzh9frxqgaOjcR7Z0MbI1Rm8oSbc
      FP/25NYORkemiZkaXc1OxuYzGHmdLYNdmNk0F+ZyPDrYzJnzY4zG7j1tyObvlTIpGR0eQtcW
      aHINcObQMYSnhQ0b+xg+8zEFQvS0Kuiak4KZIzk3xoUz5+jd9QTExrh68SK9Oz+LuTjExLxJ
      b38bVw6fYf1nniRy6QgZSwsbtm6+bVqpS4mJ5NadYYtiZWtwDwO+zZyPnuL4/EFi+cWKPxFc
      mpuN/m3san4Ut8W7og3YqgpASsm506f4+29/m1wue/8PLIGRoSH++i/+nK/9xj/H4/UuydG0
      Z6CJc2NJNncF8Lc28+pHQwyu6yQ1M0NMd/J0r48oVp522LErkpzQ2NLp48zwFE/v7eGjI1f4
      qUd6ieQUFiZmsPq8DDQH6LEJ8o5O3E1pnEaGfAmunXtFp5vZBRZiCvbsGKkeJxnXIL7IORYW
      g3ia+tAjl4ll2nBJncmLE/Rua8Vu1Tl55DzdriSbHnmSkYPvsyC8PPLkXo4c+AFt3S1cvHCG
      3JkTdD39C3cxiruueYUQODQnu5ofYVNgO6OJIc5HTzGWHKZQxrBqBYUOVzfrfZvp923EY/FQ
      jlCNqgpgcmKc733nO2Uf/J8wPjrC9/7mO3z1134dm0VFUcC8zzJAqBaabZKhuSyb2v3kTVA1
      FV030TQNCmAUdK6Oz7MQSWB3e3hiYzPvnplg/5Y1KEhcFgvCkCTjKU5fXaRlwItpmqRNhaGh
      KaaiGQLBIHsHQ7x8bOqe9tju0bMrPDpOc1sIkVKYnwkDNhIFnWZFIWNkSMYzBHzX2vwJuHD+
      HD29a1i4WMDmasFitaBYFNS8QTaTw+Z04PCsodflx2hp5uLpY7St6bjNBlURJd1l7aqD9f7N
      9HsGSGQXGEtcYTQxxFRmgpzUMQQlPR0ExbWGTXXQ7uiky91Ht7sPvzWAqpR3yFZNAOl0mn/8
      278lm62sZ+bS+XO8/87brN2y99qc8N4KUBTJgSPDzEazjM+7MFBZ1+nn5JVJNvS3oiWjvHVx
      gWaHQjwPbQ6Vt09NE2jycfHKFOenk+webOXtk2MkdEEGmJ2aY36iQPeaFlzSIG8IvKrOoYv3
      d8t6nXevTudu6yLoCqKaWRanT3P62CV27NqOXTEYnRiitX8noVAA02qjb9d60MPMhuOs39mP
      z66hWZys2f4oofgUU+PjbNq1n5HLY7R5W4gno/QMbsVquX3tYtME9+pOZRp5kotDLM6eJBY+
      Szo+Ti6zgKFncBp5BlQrOc1CVhHoTi/S247iacXu60IqKgoKmmLBoTrwWv34rUE8Vj8+qx+L
      ssJqffdhSRlhy0VKyZs/+TEHXnu10qcCinU+v/Ib3+DfffsoyUx9uerux/P7B2jq6bpv4otZ
      SJEqWPA4rej5PKYEq60yg2Wg2cFja29e6EopySSnmL7yKlNX/ol0fBLTKP3Jrqh2HJ4OOgZ+
      mo7+F3B4OhBV6FVwK1V5AiTicT56791qnAqATDrNycMf4HF6G04A/e1+TJtGWL+33YrFheda
      1Ie20pqm96HFfT28REpJJjHByOlvMXHpBxiF1LKOaRpZUtFhLh/5I4ZP/AWdgz/D2i1fxent
      qmpUcVUkd/zjI6RTy/uilsuZEyfp8DZehetNPc2E3PVjt6ZAi6toj2nkGTv3N3z0g19l9Oy3
      lz34b8UopBg7+x0Ovvx1Rs9+B8OoXvxWxQVgGAYnjx6t9GluI5/PoaUbq8lHKNDDOC8AABfK
      SURBVOCiLeimJ2CreGeUUgk6LfjsKpnkDMde/z3OffAfyFeo6G8+s8D5D/8jx1//PTKJ6kTx
      VlwAC+EwkUhtqiRb8xEctsbphL5zoA2LptDkshCoQoO4UljXZCcZHeLjV3+L8Fh1prHhsfc4
      8upvkYhcqXgJnooLYHpqqmb9xrKxeTb3NEYDCE1VeGpbD0IIFCHY2l77NFOvXSVgDHPkn75B
      cnGoqudORYc58qPfJBa+PVW0nFThCVC7iExdL7C7z49aL/OJe9DsczLQFfz0350+G62e2q0F
      BNDnjHD27d8nlw7XxIZcep4TB36fVGysYueouACSyVIasDl46atf4Ylnv8TWwR4CLa00BX1o
      FhstrW14PU6E0Ai1d+C0W7DaHPgCgfvuA5qGwaYuPwNr6v8p0NnswWa5Pu3RFMHeNR6sam3E
      G7JnSZ74d6Tj4zU5/ydkEhOcfPP3yWcrU7i34gLQC6W5IVOxRaamI/ia/LS0hdi67zEGBzbQ
      s6advY89xsade2kPtbD/kb3sfupZdmy9f8K2KSVIk5c+u6mUKuE1QxGCFz+z6ba/B10WtndU
      PzTaaVEIhr9FfL6y049SiYXPcvnj/0IlchAqLoBSN2dsDg9aYYoT5+fo6+nCardhFTqjFy8R
      SeZoa++iuSlAIZcltTDLR+8evu/XoQiBplnYMdDGU9t7Vn4xFeK5vX1s6A5ixibQh98mf/p7
      FM5+H2P8EOtdKTaGqlejx64JttgvsjhcX/0Cxi98j/nJQ2U/bsVdDW5PKaGyOhdPH+fSpavY
      nH6S6QKmkSQnNbbue4TF+WmOXh5jx5a1JBNJFhP6fQIciqiahtPpRFUUvvrsVs6PzDMXre5+
      xP3obPHwz/YEyR/43ylc+nGxMO4NCFcLmzr3UGj7CldkZTtQWlXBo102pj74U0yjPnKSP0Ga
      BS5//F/wh7ahWcpXcKHioRBnT5/iW3/x50v7kBAgJU3tXRQW54hnl+dF8vr8/Ot/+7+gaRpS
      wskrM/zBN9+jUCeJMlZN4X/dv8ja0f9+3z4Bpubg0rpvcLH5BQxR/vuWz67y+FofRvgdjr/+
      r6jPlEfBjmf/T9r7ni/bESs+BWpr78BuX+Ij/JomF6bHlz34AdZ0dxcjOilqavu6Vn79he1o
      94rsqhIWTeHXu86z9vIfl9QkQ9EzrL/4n3l08k/xWMu3oBFAb9DO84MBml0aI6e/SX0OfgDJ
      yKlvlnVvoOIjIRAM0tpem2KrGzZvvunfQghe2D/ALz+7paauUU1V+Fp/mCcyLy+pVZKQJqGR
      f+C5zCvsaHdi15b/8ykCml0Wnhnw80SvF6dVJbl4hdjc2WUfsxrE5s+SiJSvZ13FBaAoCjv3
      VL/kttPlYv2m2z0riiL4+ac28hs/tfOOob+Vxm7V+MYLG3nWeAWxnJgXaSKO/yVbnRG+tCnI
      /m4PIbflnuHKN+K0KPQF7Tyzzs8X1gfo9Nk+bZM0c/UAZp33BpCmzuzV18t2vKrst2/ZsZO3
      33iD6GJ1mtEB7Nq3D7fbc8fXhBD81CMDdLZ4+KPvHWahStUjWoMufufn9zGYfJd8bPn+dZlZ
      JH/6uzif+p/ZEHIy0Owgq5vMpwpEMzrJnEHekJhSogkdq0zgUWI0uaz4vSFsdifKLXUyTVMn
      MnVkpZdYFRamPqbf1FHKkBxTFQE4HA6efuYZXv7e31elvZLX5+exJ5++Z1itogh2DrTzH37z
      Gb75k1N8cHq8uG9QAVRF8NT2Hr72/DaavA4y339jxcfUrxxAPvmvEEJBVQQuq4rLqtITKL4u
      zRyFhY/IL7yDmZkAJMShMKNiOnqwhp5F8+1CXBtE+cwiyejwiu2qBqnYCPnMAnZX64qPVZXV
      oBCCXXv30T8wWJVzPffCC/gDgdtflBJMEwwDdB0Mg1a/k999cT//5qtP0N8R+HQ6UA4URTDY
      1cS//dWn+J2f30ezzwm5GObCneNqFiJZjs7evHEYz97ZYyXjU8jEnaNdzUKMzNX/j+zEtzAz
      49y0qJUGRnqYzMifkR37S6RZnIblsxHymcboFp/PLpLLlGc2UbWQQ4vVypd/8Sv86R//EdFI
      5aZCex95lJ179xX/YZoQj0NkARYjEItBJnNt8OugqKBpaHY7+30+dj/bw5FwG29cXuDc+CLp
      3PKSaVx2C1t6Qzy/t5+dg22oN9QskrkEsnCnKZfkwoJOJK+zPSD4aCyLUAQHriT40pYAOzts
      N4d+SIlMhcF7s4NBmjkyo3+GkTh/HytNCouHQGjYu75GOjYOLK8e0SdP9aolskiTdGwMX/PG
      FR+qqjG3/kCAr/zK1/nWX/75smoB3Y/NW7fxwpd+BiURh6EhGBuBRAJKDMfQgEc1jX0eJ3N7
      g5zCw6mozvnxBeKpHIYpr1VvvlaPQBR/dFUR+Fx2Nq9tYWt/iG19rTT7nTcN/OsI7lTNwCiY
      XFw08OUMptIWTiwY/OYeL+mswY52653jnm4ZcFJKCvPvYyQulHS9AIXIQTTfDvK55d398+kC
      rx5L4vdqPLHZjW5KLJoACbpR/O+J0SxreuzoBYlqKb4mTUCAKUFTly6ecsUGVVUAQgi6167l
      17/xW3z7r/6S+TJFiiqKws7du/mZx5/A8t47MDmx/AK8uo6aiNOeiNMOfL4lhHxpK4lgK7OJ
      LKlsgWxeR1Cs4OCyW2gLunE7rCX9iMLuRVidyFt+wHBaMthsJWSDq9M51rU5sKmCQt5gJmnQ
      4bnlpxIC4b6ldr+ZJb/wNkvz4xvk515Hz7cs4TPXOXc2w3OP+nGqgnMnokxkTHw+B7ZcjkgW
      2todOFUYHcswPJ7H32ohHc4isSCMAragja3rXdiXOBLLlY1Wk6yL1vZ2fuO3/iWvvvwDTp84
      vqJj2ex2vvDkU+xWBNpbB4rTnnISnkO8/SbelhDeffuhs/W2O++SsHpQm9ejx28uj9LkUQm4
      VawC2puscO3p8Vifm9wd9iwUfw+63c/lmWmklAy0hNDyYczs0rPgjPQQmMsLuhNmsZK1lJKI
      qvLcIz4+PhPD47WxZbOVi1M5TBOS0TyugIoUAtWmsn+Xh9GLCYaiBnmDJQugXNTktEII/IEA
      v/T1X2Pnnj28++abjI1cxVzC4HU4HGzdupXPdHTiHxkuLmwrhZQwNwv/9ENYvxF27wGbbVmH
      EkKgrf8C+vBbN/3dcsMg99iv708E7pLXPBXaxx/+3d8yFS/uIrd5vPybR9ppW848XhooLM//
      v3m7gx99uEjIb6FZhXcPRwk2OZiLZBidy9LX68YiDewhK5emdUJOBVfAggLEpMCuQj4vwba0
      m4pmLU/CUFXKotyPQqHA2MhVzpw8yeWLF4jMz9/xfZqm0dnVzaatW9nQv47mi+cRE+Mr6jew
      LEKt8MRT4L9/5xQpJUZ4Hj2ygGKzoXV0IFRJ+tu/eFdv0P0wHE38B89XOJ28ebA/0ZLit3uX
      18Q8aXuCk+//38v67KeLYIpPA0XA5GSe9k4r6g1PS9OUCOV6m7pP1lPKMnbldz77f9FWhpig
      ukg8tVgs9A8M0rduACkl6XSahXCYdCqFYehYrTa8fh9NTc3FDjCxKOKtN4uenVowNws/egWe
      ebYohjtMiaSuk/7oIPEfvExhcrIoUiEQdjvORx7BvedfkD/4B7dFf94XRSO2/Te4eqEA3LyT
      PJ5SMKVAEUu8IQgVd/MOEMqSQjM+/fgN11/M35F0dlpv+15uHehCiOXNJoWC09u9jA/eTl0I
      4BOKX4jA7Xbjdt9lThqLwes/Lnp3akk2Awdeh888A+3tN/3YslBg8Zt/TfKNW9YkUiIzGVJv
      vUXuXAjv515Ejvw1mPcqiHsDQsG66+u4tn4Z7fLf3/Zy0nSTVQI45dJuDKqzH9XVgc0RJJe+
      89N3aSxzYJeI1R7E6gje/40lUPuwyKWQSBQHXa0H/ydks/DWG8V9hhuI//AVkj95/Z4Lcn12
      jtjro9g+++8Rvq77nko4m7A/879hffx/osnl4cm+dbe9Z1/vegIdz7O0orEq1tBz2BxNuAP9
      S/hc7XAHerE5ypPmWldPgHui6/D+uxCts93KXA7eeQs+/1PgcqEvLJD4UWklII35BdIXM3i/
      8tcUTnybwqm/Q96wwymBlKOVycBW5ntfICWbyZ88iiIUgm4HAy0tTMZiuK02nuxfxy/t2oNV
      k+jxkyVshBWxBB9B825BKCrB9r0sVCDrqtw0te9FKOUJZKyLRfB9kRI+PgKnT9bakrvTsxY+
      8zmS77xD5E/+rOSPWbq6aP33/wfCYoF8CiM6SnhulLNzs4wULERVLwWh3Xmdca2lqqIodPkD
      7OjoYl1zCCtpsmN/hR4/w933BBQsgb3Yu38VoRQ9WsnFYT74h5fqLhvsRoRi4Ylf+G7ZnlaN
      8QSYmYZz9ZGgfVdGR2B4iML4xJI+ZsRimPE4WnMzMany/oLB+QWNAm1wn6oon6yZAMaji4xH
      F2lyuni8t58NPd9AWzx4LRhukk/DHISK6ujBGnoOzbfz02A4AJe/F39oO5Hp+o0K9Ye24vL3
      le149S+AQgGOHqmsn79cHD+KLKkMzA1ICVIyE4/x3ZNHSeVXVkRsIZ3ih+dOc76phefX78fT
      9BiyEMXML4IQKNYmhOZFKLerSwhB77avE5k5uixvUMURCr3bfq2sMUf1L4CRqzDXIO1Ok0m0
      5NJinBS3m0m9wMsXT6948H+ClJLL83PMp5L87JYdtHtDKLZQSZ9t6txHsH13XeYGBNp20bxm
      f1mPWd9eIF2HM6drbcWScLicCLX0Bdrs2i6+f/k8yQqUj1zMpPn7U0eZipceOKZqdgb3/DaK
      Vr1SLKWgqDYG9/w2quYo73HLerRyMzFef16f+2BxOnCtLW2TJhrw89aGftKFyi06k7kc3z99
      gsV06cFjgbYd9Gz+SsVsWg7dm36RYPvOsh+3fgUgJVwdrn6YQxnwbdqAffPt+cg3knc5Ofy5
      J8lplZ+FxrIZfnzxLHmjxA03BP07f5Ng+56K2lUqgbbdrNv1DcrRFO9W6lcAmQxMTdbaimWh
      6gWav/6reH/uZ1F8vptf1DRsGzdy9SsvEg7eP5aoXFyNLHBisvQ8ZIvVzbbP/AHuMnpcloPL
      38v2z/4BFtud87tXSv3uA4yPFUMeGpW9+5FbtmIsRimMjKAvFIPhLN3dpIN+/uzYIQpV9mw5
      LVb+h0eewGUtPZI1EbnM0dd+h0zy3t0tK4Hd3c7uz/9nvE3rK3aO+n0CTFX/Cy8r01MIKdGC
      ARy7duJ57llcTz2JdW0Ph6cnqz74AdKFPMcmllZq3BMcYN9P/wne5ntP6cqNt2lD8bwVHPxQ
      zwKoUVeZshGP3XHvIp3Pc3m+dq2bLszNkNNLXQsUcfq62fOF/+da+HGl834Fbb3PsfsLf4zL
      V/mCxvW5DyBlMeqzkUkmi5t4lps3nMaiEeLZyjQKL4X5VJLZRIzuwNKCyWzOZnZ87g+Z6n6K
      Sx//Mdlk+Xt42d1tDOz+l3QOfKlssT73oz4FkMtBBV2Dhl7AUDSslSyPaJrFhbzzeiVjKSVj
      tcphuIGxxciSBQAgFJWOgS8R7NjH+LnvMnrub9HzK4/M1aweuje9RPeml7C72qraJrU+BVAo
      LNP9afJn33+ZfU8+z6Atw3/68AK/97m9TMXihHwBrJhMxhKI+BgXLWvY4nci9DTYfNjNHJFM
      np4mP/PRKKrdhVeDsXiKLr8f63IK6t4iYlNKZhPlr4axVD5Jo1wOQggc7jYG9v4OPVu/xszQ
      j5m68grJxWH0JSSqaxYXLn8vHQNfpL3/C1jtgaoO/E/tqPoZS0HXl+3/X9fVzcz0JIZNZfOa
      DlLZNFORec6Eo8hUDJ8vSBsmlxbCROZz7GjxAQ7eOX0CkRekNvYwNBkjLUw6XAWymg+3zUmr
      exk7o7eUYzGlJJZNL+u6bjt0Lo9lmZ3hFzMrt0EIgc0RpGfLL9G18UXS8XFi4bPEwmdJxUbJ
      pmcx8mlMI4ei2lAtTuyuVly+bnwtW/C1bMbp7UJRa9sTuT4FIO5cO6cUTDQ0M89s1kLQ5WB4
      aoSrcYOkqdDndvJE/1pmx1I8tn4APTqOLg2Qkv72Ptz5KJOJKCPpLO0uK+taO3n97GUCtsDy
      BCBufmpIKcncIoqhN18lYfXR1DPImjXNGIU8CIGp55GoFDIpVLub5MQCTQNtpBcXsTg9jJw6
      RFvvRpyBAJGZGZrbQmQTCYTVgcNuIR5ZxO7xoQqDdDKLO+j/tOpdOl/e6aWiWnAH+nAH+ugc
      /CLSNJHSuJYrLClmiAmEUBGKQuUX0qVTnwLQ7hz/fn8ErUE/frfG+aSgxWmhkHLiULI0+dyE
      rPDNj0/xWLuHgCbQHS7swgSLht1tx1bwsc7jJrx4iYDbTiyZJeiy4bct01lmuf3uZtySJaao
      Gk3t7bi9LnImTJ45idTTpFIGmtWCYnWQT1lxaWCzpRgbnSM0sIHk/CJheRFrWy/phXm0eJhw
      RpKfy+BrFWSwYURGsIsIoqULq8eH/VpfAd2spAtWIBQVQfUrby+H+hSA1cryWqULNvcW43A6
      P6nzJJvYSPGRLaVka/cNSdyOGyIkb7jDd+0vhgAIARu6updfL/TW0ikCNEWlcMMAFFixu91o
      moqUEl3XUaxuBrZuY2boHK296xk/dBkjp2Nv7UCcnyAyF8YTCtG3eQMzkRy6oSPVIL3b1jBx
      8DixDGzev5nL75+iqauXoQujeNf0Yg8WA8ksSwjWe9CpTwFYLGB3QDke1eJ6GY5SF1k3vm/Z
      jiKLFW7pjCMQ2C0WCrnrAnC3deBraSGXSHH56DFUVaUpFETTFNweL5qq4A55AAM9lwGfGyWv
      4vYHQLVgtwt8fj9WhxNFEbiagjQ7JJePniAZlSRDeWxuD8oNSyqnZXlrhweR+g2FeOPHMFa5
      BskVJxCEL/1scTp3DdM0+fbxw4zfIcL105/hBsHeCflJeZV7vCcyfIXIfBhP5yChjuC1w17/
      xEBziBe3717K1Tyw1OcTAKCltbEFEGyCW6YaQgjaPL47CmA5T6e7nrpvHcE7VI34hHav766v
      PWzUbyhEjfqKlY1bagVBcfD2BMpTz2a5CKBnGZtgDyr1KwB/AErqMVyHWKzQ2nbHl9b4A/js
      5c1qWgotbg+hu7SOehipXwFYLNBVnvJ3VSfUAt47i9dhsbIhdGdxVINNre1Yq5CE0yjUrwCE
      gP7+2+bRDcHghnvuY+ztXotNrf4gdFtt7Oi8fxW6h4n6FQBAcwu0d9TaiqXh98Oaew8yt9XG
      /p7eKhl0ncd71+FYdYHeRH0LQAjYvuPTZhF1jxCwZdsdd4BvfptgT9dauqu4IB5sCbGtvbNq
      52sU6n9ktYSgrzGKthZtLS2H1qZp/NSGLbislb8jBxxOnhvchNaI08kKU/8CUBTYtRtc5ekI
      UjFUFfY/Clrp0Y0Bp4sXt+3GY6tcDR6/w8mL23bhraHnqZ6pfwEAuD2w75GV9eaqNNt3QnPz
      kj/W4fPz4rZdFXGNNrvcvLhtF82rbs+7Ur+hELfySYXoM6fqr1bQ2l546jM3hT0slYVUku+e
      PEq0DLH6qlDY2NrGs4MbVxe996FxBADFRJkP3oOhK7W25DqhVnju88tumncjyVyOg6PDnJya
      WEIRq5tp9Xh5sncd/c0tKKIxHvC1pLEEAMUsq/fehpGRWltS3O39zOeKeb9lmp5JKYnnspye
      muTC3DTRbOaeJVQE4LBa6fQG2NG5hrWBJlRFqUl6YSPSeAKAogiOHIYL52pnQ+caePqzt4U8
      lxPdNImkkswmE0TSKRK5LAXDQBECu2Yh4HTS7HITcntxWUtr1L3KzTSmAKBYdeH8OTh+tDx5
      A6WiqLBlS3HRex9//yr1T+MKAIqL4fkwHDpYbF1aafx+2L0Xunvq2yO1Ssk0tgA+oVAoLoxP
      nSgWpCo3djts2ASbtxTTNVcH/wPDgyGAT8jnYegyXL4ECwsrd5f6/MVd6PUbbipwtcqDw4Ml
      gE/QdYhEio3rpichGi3W6bzXpQpR3HX2eIvJLD1ri8F4FsvqHf8B5sEUwK1kMsVitfEEpFPF
      KZOuF8MXrNcS8L3e4v+crtUB/xDxcAhglVXuwupW4SoPNasCWOWh5v8HXJvzDJejp4IAAAAA
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
